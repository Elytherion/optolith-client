// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var $$String = require("bs-platform/lib/js/string.js");
var Ley_Set$OptolithClient = require("./Ley_Set.bs.js");

var StrSet = Ley_Set$OptolithClient.Make({
      compare: $$String.compare
    });

var foldr = StrSet.foldr;

var foldl = StrSet.foldl;

var toList = StrSet.toList;

var $$null = StrSet.$$null;

var length = StrSet.length;

var elem = StrSet.elem;

var concatMap = StrSet.concatMap;

var any = StrSet.any;

var all = StrSet.all;

var notElem = StrSet.notElem;

var find = StrSet.find;

var empty = StrSet.empty;

var singleton = StrSet.singleton;

var fromList = StrSet.fromList;

var insert = StrSet.insert;

var $$delete = StrSet.$$delete;

var toggle = StrSet.toggle;

var member = StrSet.member;

var notMember = StrSet.notMember;

var size = StrSet.size;

var disjoint = StrSet.disjoint;

var union = StrSet.union;

var difference = StrSet.difference;

var filter = StrSet.filter;

var map = StrSet.map;

var elems = StrSet.elems;

var Infix = StrSet.Infix;

exports.StrSet = StrSet;
exports.foldr = foldr;
exports.foldl = foldl;
exports.toList = toList;
exports.$$null = $$null;
exports.length = length;
exports.elem = elem;
exports.concatMap = concatMap;
exports.any = any;
exports.all = all;
exports.notElem = notElem;
exports.find = find;
exports.empty = empty;
exports.singleton = singleton;
exports.fromList = fromList;
exports.insert = insert;
exports.$$delete = $$delete;
exports.toggle = toggle;
exports.member = member;
exports.notMember = notMember;
exports.size = size;
exports.disjoint = disjoint;
exports.union = union;
exports.difference = difference;
exports.filter = filter;
exports.map = map;
exports.elems = elems;
exports.Infix = Infix;
/* StrSet Not a pure module */
