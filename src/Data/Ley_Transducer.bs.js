// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var Caml_option = require("bs-platform/lib/js/caml_option.js");
var Ley_List$OptolithClient = require("./Ley_List.bs.js");

function idT(f, x) {
  return Curry._1(f, x);
}

function $less$$tilde(f, fold, x, acc) {
  return Curry._2(fold, Curry._1(f, x), acc);
}

function $less$amp$tilde(g, f) {
  return function (param, param$1) {
    return Curry._2(g, Curry._1(f, param), param$1);
  };
}

function $tilde$less$less(pred, fold, x, acc) {
  if (Curry._1(pred, x)) {
    return Curry._2(fold, x, acc);
  } else {
    return acc;
  }
}

function $great$great$tilde(fold, pred) {
  return function (param, param$1) {
    return $tilde$less$less(pred, fold, param, param$1);
  };
}

function mapOptionT(f, fold, x, acc) {
  var y = Curry._1(f, x);
  if (y !== undefined) {
    return Curry._2(fold, Caml_option.valFromOption(y), acc);
  } else {
    return acc;
  }
}

function transduceList(t, xs) {
  return Curry._3(Ley_List$OptolithClient.foldr, Curry._1(t, Ley_List$OptolithClient.cons), /* [] */0, xs);
}

exports.idT = idT;
exports.$less$$tilde = $less$$tilde;
exports.$less$amp$tilde = $less$amp$tilde;
exports.$tilde$less$less = $tilde$less$less;
exports.$great$great$tilde = $great$great$tilde;
exports.mapOptionT = mapOptionT;
exports.transduceList = transduceList;
/* Ley_List-OptolithClient Not a pure module */
