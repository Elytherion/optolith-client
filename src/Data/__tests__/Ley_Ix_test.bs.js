// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Jest = require("@glennsl/bs-jest/src/jest.bs.js");
var Ley_Ix$OptolithClient = require("../Ley_Ix.bs.js");

Jest.describe("range", (function (param) {
        Jest.test("returns an empty list if the upper bound is lower than the lower bound", (function (param) {
                return Jest.Expect.toEqual(/* [] */0, Jest.Expect.expect(Ley_Ix$OptolithClient.range([
                                    1,
                                    -2
                                  ])));
              }));
        Jest.test("returns an singleton list if the bounds are equal", (function (param) {
                return Jest.Expect.toEqual({
                            hd: 1,
                            tl: /* [] */0
                          }, Jest.Expect.expect(Ley_Ix$OptolithClient.range([
                                    1,
                                    1
                                  ])));
              }));
        return Jest.test("returns multiple elements if the upper bound is greater than the lower bound", (function (param) {
                      return Jest.Expect.toEqual({
                                  hd: 1,
                                  tl: {
                                    hd: 2,
                                    tl: {
                                      hd: 3,
                                      tl: {
                                        hd: 4,
                                        tl: {
                                          hd: 5,
                                          tl: /* [] */0
                                        }
                                      }
                                    }
                                  }
                                }, Jest.Expect.expect(Ley_Ix$OptolithClient.range([
                                          1,
                                          5
                                        ])));
                    }));
      }));

Jest.describe("inRange", (function (param) {
        Jest.test("checks if a value is between the bounds", (function (param) {
                return Jest.Expect.toEqual(true, Jest.Expect.expect(Ley_Ix$OptolithClient.inRange([
                                    1,
                                    5
                                  ], 3)));
              }));
        Jest.test("checks if the bounds are inclusive", (function (param) {
                return Jest.Expect.toEqual(true, Jest.Expect.expect(Ley_Ix$OptolithClient.inRange([
                                    1,
                                    5
                                  ], 1)));
              }));
        return Jest.test("checks if a value is outside of the bounds", (function (param) {
                      return Jest.Expect.toEqual(false, Jest.Expect.expect(Ley_Ix$OptolithClient.inRange([
                                          1,
                                          5
                                        ], -1)));
                    }));
      }));

Jest.describe("index", (function (param) {
        Jest.test("returns the index of a value between the bounds", (function (param) {
                return Jest.Expect.toEqual(2, Jest.Expect.expect(Ley_Ix$OptolithClient.index([
                                    1,
                                    5
                                  ], 3)));
              }));
        Jest.test("returns the index of a bounding value", (function (param) {
                return Jest.Expect.toEqual(0, Jest.Expect.expect(Ley_Ix$OptolithClient.index([
                                    1,
                                    5
                                  ], 1)));
              }));
        return Jest.test("throws if a value is outside of the bounds", (function (param) {
                      return Jest.Expect.toThrow(Jest.Expect.expect(function (param) {
                                      return Ley_Ix$OptolithClient.index([
                                                  1,
                                                  5
                                                ], -1);
                                    }));
                    }));
      }));

Jest.describe("rangeSize", (function (param) {
        Jest.test("returns 0 if the upper bound is lower than the lower bound", (function (param) {
                return Jest.Expect.toEqual(0, Jest.Expect.expect(Ley_Ix$OptolithClient.rangeSize([
                                    1,
                                    -2
                                  ])));
              }));
        Jest.test("returns 1 if the bounds are equal", (function (param) {
                return Jest.Expect.toEqual(1, Jest.Expect.expect(Ley_Ix$OptolithClient.rangeSize([
                                    1,
                                    1
                                  ])));
              }));
        return Jest.test("returns the size if the upper bound is greater than the lower bound", (function (param) {
                      return Jest.Expect.toEqual(5, Jest.Expect.expect(Ley_Ix$OptolithClient.rangeSize([
                                          1,
                                          5
                                        ])));
                    }));
      }));

/*  Not a pure module */
