// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Jest = require("@glennsl/bs-jest/src/jest.bs.js");
var Ley_Bool$OptolithClient = require("../Ley_Bool.bs.js");

Jest.describe("not", (function (param) {
        Jest.test("returns True if it receives False", (function (param) {
                return Jest.Expect.toBe(true, Jest.Expect.expect(Ley_Bool$OptolithClient.not_(false)));
              }));
        return Jest.test("returns False if it receives True", (function (param) {
                      return Jest.Expect.toBe(false, Jest.Expect.expect(Ley_Bool$OptolithClient.not_(true)));
                    }));
      }));

Jest.describe("notP", (function (param) {
        Jest.test("returns True if it returns False", (function (param) {
                return Jest.Expect.toBe(true, Jest.Expect.expect(Ley_Bool$OptolithClient.notP((function (param) {
                                      return false;
                                    }), undefined)));
              }));
        return Jest.test("returns False if it returns True", (function (param) {
                      return Jest.Expect.toBe(false, Jest.Expect.expect(Ley_Bool$OptolithClient.notP((function (param) {
                                            return true;
                                          }), undefined)));
                    }));
      }));

Jest.describe("otherwise", (function (param) {
        return Jest.test("is True", (function (param) {
                      return Jest.Expect.toBe(true, Jest.Expect.expect(true));
                    }));
      }));

Jest.describe("bool", (function (param) {
        Jest.test("is returns x if the condition is False", (function (param) {
                return Jest.Expect.toBe(1, Jest.Expect.expect(Ley_Bool$OptolithClient.bool(1, 2, false)));
              }));
        return Jest.test("is returns y if the condition is True", (function (param) {
                      return Jest.Expect.toBe(2, Jest.Expect.expect(Ley_Bool$OptolithClient.bool(1, 2, true)));
                    }));
      }));

Jest.describe("bool_", (function (param) {
        Jest.test("is returns x if the condition is False", (function (param) {
                return Jest.Expect.toBe(1, Jest.Expect.expect(Ley_Bool$OptolithClient.bool_((function (param) {
                                      return 1;
                                    }), (function (param) {
                                      return 2;
                                    }), false)));
              }));
        return Jest.test("is returns y if the condition is True", (function (param) {
                      return Jest.Expect.toBe(2, Jest.Expect.expect(Ley_Bool$OptolithClient.bool_((function (param) {
                                            return 1;
                                          }), (function (param) {
                                            return 2;
                                          }), true)));
                    }));
      }));

/*  Not a pure module */
