// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Ley_Set$OptolithClient from "./Ley_Set.bs.js";

function compare(x, y) {
  return y - x | 0;
}

var IntSet = Ley_Set$OptolithClient.Make({
      compare: compare
    });

var foldr = IntSet.foldr;

var foldl = IntSet.foldl;

var toList = IntSet.toList;

var $$null = IntSet.$$null;

var length = IntSet.length;

var elem = IntSet.elem;

var concatMap = IntSet.concatMap;

var any = IntSet.any;

var all = IntSet.all;

var notElem = IntSet.notElem;

var find = IntSet.find;

var empty = IntSet.empty;

var singleton = IntSet.singleton;

var fromList = IntSet.fromList;

var insert = IntSet.insert;

var $$delete = IntSet.$$delete;

var toggle = IntSet.toggle;

var member = IntSet.member;

var notMember = IntSet.notMember;

var size = IntSet.size;

var disjoint = IntSet.disjoint;

var union = IntSet.union;

var difference = IntSet.difference;

var filter = IntSet.filter;

var map = IntSet.map;

var elems = IntSet.elems;

var Infix = IntSet.Infix;

export {
  IntSet ,
  foldr ,
  foldl ,
  toList ,
  $$null ,
  length ,
  elem ,
  concatMap ,
  any ,
  all ,
  notElem ,
  find ,
  empty ,
  singleton ,
  fromList ,
  insert ,
  $$delete ,
  toggle ,
  member ,
  notMember ,
  size ,
  disjoint ,
  union ,
  difference ,
  filter ,
  map ,
  elems ,
  Infix ,
  
}
/* IntSet Not a pure module */
