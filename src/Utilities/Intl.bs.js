// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Ley_Ord$OptolithClient from "../Data/Ley_Ord.bs.js";
import * as Ley_List$OptolithClient from "../Data/Ley_List.bs.js";
import * as Ley_Option$OptolithClient from "../Data/Ley_Option.bs.js";

function getSeparator(type_, staticData) {
  if (type_) {
    return staticData.messages.general_or;
  } else {
    return staticData.messages.general_and;
  }
}

function format(type_, staticData, xs) {
  if (xs) {
    if (xs.tl) {
      return Ley_Option$OptolithClient.option("", (function (param) {
                    var lastStr = param[1];
                    var initStr = Ley_List$OptolithClient.intercalate(", ", param[0]);
                    return initStr + (" " + (getSeparator(type_, staticData) + (" " + lastStr)));
                  }), Ley_List$OptolithClient.Extra.unsnoc(xs));
    } else {
      return xs.hd;
    }
  } else {
    return "";
  }
}

var ListFormat = {
  format: format
};

function compare(collator, a, b) {
  return Ley_Ord$OptolithClient.toOrdering(collator.compare(a, b));
}

function Collator_create(prim) {
  return Intl.Collator(prim);
}

function Collator_createWithOptions(prim, prim$1) {
  return Intl.Collator(prim, prim$1);
}

var Collator = {
  create: Collator_create,
  createWithOptions: Collator_createWithOptions,
  compare: compare
};

export {
  ListFormat ,
  Collator ,
  
}
/* Ley_List-OptolithClient Not a pure module */
