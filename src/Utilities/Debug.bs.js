// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var Ley_Option$OptolithClient = require("../Data/Ley_Option.bs.js");

function insertSpaceNotNull(x) {
  if (x.length !== 0) {
    return x + " ";
  } else {
    return "";
  }
}

function concatMsgValue(msg, x) {
  return insertSpaceNotNull(msg) + Ley_Option$OptolithClient.fromOption("", JSON.stringify(x));
}

function trace(msg, x) {
  console.log(msg);
  return x;
}

function traceId(msg) {
  console.log(msg);
  return msg;
}

function traceShow(a, b) {
  console.log(a);
  return b;
}

function traceShowId(x) {
  console.log(x);
  return x;
}

function traceShowBoth(a, b) {
  console.log(a);
  console.log(b);
  return b;
}

function traceShowIdWhen(print, x) {
  if (print) {
    console.log(x);
    return x;
  } else {
    return x;
  }
}

function traceIdWith(f, x) {
  console.log(Curry._1(f, x));
  return x;
}

function traceShowWith(msg, f, x) {
  console.log(concatMsgValue(msg, Curry._1(f, x)));
  return x;
}

function traceShowIdWith(f, x) {
  console.log(Curry._1(f, x));
  return x;
}

function traceShowOn(pred, msg, x) {
  if (Curry._1(pred, x)) {
    console.log(concatMsgValue(msg, x));
    return x;
  } else {
    return x;
  }
}

exports.trace = trace;
exports.traceId = traceId;
exports.traceShow = traceShow;
exports.traceShowId = traceShowId;
exports.traceShowBoth = traceShowBoth;
exports.traceShowIdWhen = traceShowIdWhen;
exports.traceIdWith = traceIdWith;
exports.traceShowWith = traceShowWith;
exports.traceShowIdWith = traceShowIdWith;
exports.traceShowOn = traceShowOn;
/* Ley_Option-OptolithClient Not a pure module */
