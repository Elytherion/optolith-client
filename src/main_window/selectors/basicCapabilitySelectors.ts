/* eslint-disable jsdoc/require-jsdoc */
/* eslint-disable @typescript-eslint/no-namespace */
import { createSelector } from "@reduxjs/toolkit"
import { GetAll, GetById } from "../../shared/domain/getTypes.ts"
import { constant } from "../../shared/utils/function.ts"
import {
  selectDynamicAdvancedCombatSpecialAbilities,
  selectDynamicAdvancedKarmaSpecialAbilities,
  selectDynamicAdvancedMagicalSpecialAbilities,
  selectDynamicAdvancedSkillSpecialAbilities,
  selectDynamicAdvantages,
  selectDynamicAncestorGlyphs,
  selectDynamicAnimistPowers,
  selectDynamicArcaneOrbEnchantments,
  selectDynamicAttireEnchantments,
  selectDynamicAttributes,
  selectDynamicBlessedTraditions,
  selectDynamicBlessings,
  selectDynamicBowlEnchantments,
  selectDynamicBrawlingSpecialAbilities,
  selectDynamicCantrips,
  selectDynamicCauldronEnchantments,
  selectDynamicCeremonialItemSpecialAbilities,
  selectDynamicCeremonies,
  selectDynamicChronicleEnchantments,
  selectDynamicCloseCombatTechniques,
  selectDynamicCombatSpecialAbilities,
  selectDynamicCombatStyleSpecialAbilities,
  selectDynamicCommandSpecialAbilities,
  selectDynamicCurses,
  selectDynamicDaggerRituals,
  selectDynamicDisadvantages,
  selectDynamicDominationRituals,
  selectDynamicElvenMagicalSongs,
  selectDynamicFamiliarSpecialAbilities,
  selectDynamicFatePointSexSpecialAbilities,
  selectDynamicFatePointSpecialAbilities,
  selectDynamicFocusRules,
  selectDynamicFoolsHatEnchantments,
  selectDynamicGeneralSpecialAbilities,
  selectDynamicGeodeRituals,
  selectDynamicInstrumentEnchantments,
  selectDynamicJesterTricks,
  selectDynamicKarmaSpecialAbilities,
  selectDynamicKrallenkettenzauber,
  selectDynamicLiturgicalChants,
  selectDynamicLiturgicalStyleSpecialAbilities,
  selectDynamicLycantropicGifts,
  selectDynamicMagicStyleSpecialAbilities,
  selectDynamicMagicalDances,
  selectDynamicMagicalMelodies,
  selectDynamicMagicalRunes,
  selectDynamicMagicalSigns,
  selectDynamicMagicalSpecialAbilities,
  selectDynamicMagicalTraditions,
  selectDynamicOptionalRules,
  selectDynamicOrbEnchantments,
  selectDynamicPactGifts,
  selectDynamicProtectiveWardingCircleSpecialAbilities,
  selectDynamicRangedCombatTechniques,
  selectDynamicRingEnchantments,
  selectDynamicRituals,
  selectDynamicSermons,
  selectDynamicSexSpecialAbilities,
  selectDynamicSickleRituals,
  selectDynamicSikaryanDrainSpecialAbilities,
  selectDynamicSkillStyleSpecialAbilities,
  selectDynamicSkills,
  selectDynamicSpellSwordEnchantments,
  selectDynamicSpells,
  selectDynamicStaffEnchantments,
  selectDynamicStates,
  selectDynamicToyEnchantments,
  selectDynamicTrinkhornzauber,
  selectDynamicVampiricGifts,
  selectDynamicVisions,
  selectDynamicWandEnchantments,
  selectDynamicWeaponEnchantments,
  selectDynamicZibiljaRituals,
} from "../slices/characterSlice.ts"
import { selectDatabase } from "../slices/databaseSlice.ts"

// prettier-ignore
export namespace SelectGetById {
  export namespace Static {
    export const AdvancedCombatSpecialAbility = createSelector(selectDatabase, (database): GetById.Static.AdvancedCombatSpecialAbility => id => database.advancedCombatSpecialAbilities[id])
    export const AdvancedKarmaSpecialAbility = createSelector(selectDatabase, (database): GetById.Static.AdvancedKarmaSpecialAbility => id => database.advancedKarmaSpecialAbilities[id])
    export const AdvancedMagicalSpecialAbility = createSelector(selectDatabase, (database): GetById.Static.AdvancedMagicalSpecialAbility => id => database.advancedMagicalSpecialAbilities[id])
    export const AdvancedSkillSpecialAbility = createSelector(selectDatabase, (database): GetById.Static.AdvancedSkillSpecialAbility => id => database.advancedSkillSpecialAbilities[id])
    export const Advantage = createSelector(selectDatabase, (database): GetById.Static.Advantage => id => database.advantages[id])
    export const Ammunition = createSelector(selectDatabase, (database): GetById.Static.Ammunition => id => database.ammunition[id])
    export const AncestorGlyph = createSelector(selectDatabase, (database): GetById.Static.AncestorGlyph => id => database.ancestorGlyphs[id])
    export const AnimalCare = createSelector(selectDatabase, (database): GetById.Static.AnimalCare => id => database.animalCare[id])
    export const AnimalDisease = createSelector(selectDatabase, (database): GetById.Static.AnimalDisease => id => database.animalDiseases[id])
    export const Animal = createSelector(selectDatabase, (database): GetById.Static.Animal => id => database.animals[id])
    export const AnimalShapePath = createSelector(selectDatabase, (database): GetById.Static.AnimalShapePath => id => database.animalShapePaths[id])
    export const AnimalShape = createSelector(selectDatabase, (database): GetById.Static.AnimalShape => id => database.animalShapes[id])
    export const AnimalShapeSize = createSelector(selectDatabase, (database): GetById.Static.AnimalShapeSize => id => database.animalShapeSizes[id])
    export const AnimalType = createSelector(selectDatabase, (database): GetById.Static.AnimalType => id => database.animalTypes[id])
    export const AnimistPower = createSelector(selectDatabase, (database): GetById.Static.AnimistPower => id => database.animistPowers[id])
    export const Tribe = createSelector(selectDatabase, (database): GetById.Static.Tribe => id => database.animistPowerTribes[id])
    export const ArcaneBardTradition = createSelector(selectDatabase, (database): GetById.Static.ArcaneBardTradition => id => database.arcaneBardTraditions[id])
    export const ArcaneDancerTradition = createSelector(selectDatabase, (database): GetById.Static.ArcaneDancerTradition => id => database.arcaneDancerTraditions[id])
    export const ArcaneOrbEnchantment = createSelector(selectDatabase, (database): GetById.Static.ArcaneOrbEnchantment => id => database.arcaneOrbEnchantments[id])
    export const Armor = createSelector(selectDatabase, (database): GetById.Static.Armor => id => database.armors[id])
    export const ArmorType = createSelector(selectDatabase, (database): GetById.Static.ArmorType => id => database.armorTypes[id])
    export const Aspect = createSelector(selectDatabase, (database): GetById.Static.Aspect => id => database.aspects[id])
    export const AttireEnchantment = createSelector(selectDatabase, (database): GetById.Static.AttireEnchantment => id => database.attireEnchantments[id])
    export const Attribute = createSelector(selectDatabase, (database): GetById.Static.Attribute => id => database.attributes[id])
    export const BandageOrRemedy = createSelector(selectDatabase, (database): GetById.Static.BandageOrRemedy => id => database.bandagesAndRemedies[id])
    export const BlessedTradition = createSelector(selectDatabase, (database): GetById.Static.BlessedTradition => id => database.blessedTraditions[id])
    export const Blessing = createSelector(selectDatabase, (database): GetById.Static.Blessing => id => database.blessings[id])
    export const Book = createSelector(selectDatabase, (database): GetById.Static.Book => id => database.books[id])
    export const BowlEnchantment = createSelector(selectDatabase, (database): GetById.Static.BowlEnchantment => id => database.bowlEnchantments[id])
    export const BrawlingSpecialAbility = createSelector(selectDatabase, (database): GetById.Static.BrawlingSpecialAbility => id => database.brawlingSpecialAbilities[id])
    export const Brew = createSelector(selectDatabase, (database): GetById.Static.Brew => id => database.brews[id])
    export const Cantrip = createSelector(selectDatabase, (database): GetById.Static.Cantrip => id => database.cantrips[id])
    export const CauldronEnchantment = createSelector(selectDatabase, (database): GetById.Static.CauldronEnchantment => id => database.cauldronEnchantments[id])
    export const CeremonialItem = createSelector(selectDatabase, (database): GetById.Static.CeremonialItem => id => database.ceremonialItems[id])
    export const CeremonialItemSpecialAbility = createSelector(selectDatabase, (database): GetById.Static.CeremonialItemSpecialAbility => id => database.ceremonialItemSpecialAbilities[id])
    export const Ceremony = createSelector(selectDatabase, (database): GetById.Static.Ceremony => id => database.ceremonies[id])
    export const ChronicleEnchantment = createSelector(selectDatabase, (database): GetById.Static.ChronicleEnchantment => id => database.chronicleEnchantments[id])
    export const CloseCombatTechnique = createSelector(selectDatabase, (database): GetById.Static.CloseCombatTechnique => id => database.closeCombatTechniques[id])
    export const Clothes = createSelector(selectDatabase, (database): GetById.Static.Clothes => id => database.clothes[id])
    export const CombatSpecialAbility = createSelector(selectDatabase, (database): GetById.Static.CombatSpecialAbility => id => database.combatSpecialAbilities[id])
    export const CombatStyleSpecialAbility = createSelector(selectDatabase, (database): GetById.Static.CombatStyleSpecialAbility => id => database.combatStyleSpecialAbilities[id])
    export const CommandSpecialAbility = createSelector(selectDatabase, (database): GetById.Static.CommandSpecialAbility => id => database.commandSpecialAbilities[id])
    export const Condition = createSelector(selectDatabase, (database): GetById.Static.Condition => id => database.conditions[id])
    export const Container = createSelector(selectDatabase, (database): GetById.Static.Container => id => database.containers[id])
    export const Continent = createSelector(selectDatabase, (database): GetById.Static.Continent => id => database.continents[id])
    export const CoreRule = createSelector(selectDatabase, (database): GetById.Static.CoreRule => id => database.coreRules[id])
    export const Culture = createSelector(selectDatabase, (database): GetById.Static.Culture => id => database.cultures[id])
    export const Curse = createSelector(selectDatabase, (database): GetById.Static.Curse => id => database.curses[id])
    export const DaggerRitual = createSelector(selectDatabase, (database): GetById.Static.DaggerRitual => id => database.daggerRituals[id])
    export const DerivedCharacteristic = createSelector(selectDatabase, (database): GetById.Static.DerivedCharacteristic => id => database.derivedCharacteristics[id])
    export const Disadvantage = createSelector(selectDatabase, (database): GetById.Static.Disadvantage => id => database.disadvantages[id])
    export const Disease = createSelector(selectDatabase, (database): GetById.Static.Disease => id => database.diseases[id])
    export const DominationRitual = createSelector(selectDatabase, (database): GetById.Static.DominationRitual => id => database.dominationRituals[id])
    export const Element = createSelector(selectDatabase, (database): GetById.Static.Element => id => database.elements[id])
    export const Elixir = createSelector(selectDatabase, (database): GetById.Static.Elixir => id => database.elixirs[id])
    export const ElvenMagicalSong = createSelector(selectDatabase, (database): GetById.Static.ElvenMagicalSong => id => database.elvenMagicalSongs[id])
    export const EquipmentOfBlessedOnes = createSelector(selectDatabase, (database): GetById.Static.EquipmentOfBlessedOnes => id => database.equipmentOfBlessedOnes[id])
    export const EquipmentPackage = createSelector(selectDatabase, (database): GetById.Static.EquipmentPackage => id => database.equipmentPackages[id])
    export const ExperienceLevel = createSelector(selectDatabase, (database): GetById.Static.ExperienceLevel => id => database.experienceLevels[id])
    export const EyeColor = createSelector(selectDatabase, (database): GetById.Static.EyeColor => id => database.eyeColors[id])
    export const FamiliarSpecialAbility = createSelector(selectDatabase, (database): GetById.Static.FamiliarSpecialAbility => id => database.familiarSpecialAbilities[id])
    export const FamiliarsTrick = createSelector(selectDatabase, (database): GetById.Static.FamiliarsTrick => id => database.familiarsTricks[id])
    export const FatePointSexSpecialAbility = createSelector(selectDatabase, (database): GetById.Static.FatePointSexSpecialAbility => id => database.fatePointSexSpecialAbilities[id])
    export const FatePointSpecialAbility = createSelector(selectDatabase, (database): GetById.Static.FatePointSpecialAbility => id => database.fatePointSpecialAbilities[id])
    export const FocusRule = createSelector(selectDatabase, (database): GetById.Static.FocusRule => id => database.focusRules[id])
    export const Subject = createSelector(selectDatabase, (database): GetById.Static.Subject => id => database.focusRuleSubjects[id])
    export const FoolsHatEnchantment = createSelector(selectDatabase, (database): GetById.Static.FoolsHatEnchantment => id => database.foolsHatEnchantments[id])
    export const GemOrPreciousStone = createSelector(selectDatabase, (database): GetById.Static.GemOrPreciousStone => id => database.gemsAndPreciousStones[id])
    export const GeneralSpecialAbility = createSelector(selectDatabase, (database): GetById.Static.GeneralSpecialAbility => id => database.generalSpecialAbilities[id])
    export const GeodeRitual = createSelector(selectDatabase, (database): GetById.Static.GeodeRitual => id => database.geodeRituals[id])
    export const HairColor = createSelector(selectDatabase, (database): GetById.Static.HairColor => id => database.hairColors[id])
    export const IlluminationLightSource = createSelector(selectDatabase, (database): GetById.Static.IlluminationLightSource => id => database.illuminationLightSources[id])
    export const IlluminationRefillsOrSupplies = createSelector(selectDatabase, (database): GetById.Static.IlluminationRefillsOrSupplies => id => database.illuminationRefillsAndSupplies[id])
    export const InstrumentEnchantment = createSelector(selectDatabase, (database): GetById.Static.InstrumentEnchantment => id => database.instrumentEnchantments[id])
    export const JesterTrick = createSelector(selectDatabase, (database): GetById.Static.JesterTrick => id => database.jesterTricks[id])
    export const Jewelry = createSelector(selectDatabase, (database): GetById.Static.Jewelry => id => database.jewelry[id])
    export const KarmaSpecialAbility = createSelector(selectDatabase, (database): GetById.Static.KarmaSpecialAbility => id => database.karmaSpecialAbilities[id])
    export const Kirchenpraegung = createSelector(selectDatabase, (database): GetById.Static.Kirchenpraegung => id => database.kirchenpraegungen[id])
    export const Krallenkettenzauber = createSelector(selectDatabase, (database): GetById.Static.Krallenkettenzauber => id => database.krallenkettenzauber[id])
    export const Language = createSelector(selectDatabase, (database): GetById.Static.Language => id => database.languages[id])
    export const Curriculum = createSelector(selectDatabase, (database): GetById.Static.Curriculum => id => database.lessonsCurricula[id])
    export const Guideline = createSelector(selectDatabase, (database): GetById.Static.Guideline => id => database.lessonsGuidelines[id])
    export const Liebesspielzeug = createSelector(selectDatabase, (database): GetById.Static.Liebesspielzeug => id => database.liebesspielzeug[id])
    export const LiturgicalChant = createSelector(selectDatabase, (database): GetById.Static.LiturgicalChant => id => database.liturgicalChants[id])
    export const LiturgicalStyleSpecialAbility = createSelector(selectDatabase, (database): GetById.Static.LiturgicalStyleSpecialAbility => id => database.liturgicalStyleSpecialAbilities[id])
    export const Locale = createSelector(selectDatabase, (database): GetById.Static.Locale => id => database.locales[id])
    export const LuxuryGood = createSelector(selectDatabase, (database): GetById.Static.LuxuryGood => id => database.luxuryGoods[id])
    export const LycantropicGift = createSelector(selectDatabase, (database): GetById.Static.LycantropicGift => id => database.lycantropicGifts[id])
    export const MagicalArtifact = createSelector(selectDatabase, (database): GetById.Static.MagicalArtifact => id => database.magicalArtifacts[id])
    export const MagicalDance = createSelector(selectDatabase, (database): GetById.Static.MagicalDance => id => database.magicalDances[id])
    export const MagicalMelody = createSelector(selectDatabase, (database): GetById.Static.MagicalMelody => id => database.magicalMelodies[id])
    export const MagicalRune = createSelector(selectDatabase, (database): GetById.Static.MagicalRune => id => database.magicalRunes[id])
    export const MagicalSign = createSelector(selectDatabase, (database): GetById.Static.MagicalSign => id => database.magicalSigns[id])
    export const MagicalSpecialAbility = createSelector(selectDatabase, (database): GetById.Static.MagicalSpecialAbility => id => database.magicalSpecialAbilities[id])
    export const MagicalTradition = createSelector(selectDatabase, (database): GetById.Static.MagicalTradition => id => database.magicalTraditions[id])
    export const MagicStyleSpecialAbility = createSelector(selectDatabase, (database): GetById.Static.MagicStyleSpecialAbility => id => database.magicStyleSpecialAbilities[id])
    export const MetaCondition = createSelector(selectDatabase, (database): GetById.Static.MetaCondition => id => database.metaConditions[id])
    export const MusicalInstrument = createSelector(selectDatabase, (database): GetById.Static.MusicalInstrument => id => database.musicalInstruments[id])
    export const OptionalRule = createSelector(selectDatabase, (database): GetById.Static.OptionalRule => id => database.optionalRules[id])
    export const OrbEnchantment = createSelector(selectDatabase, (database): GetById.Static.OrbEnchantment => id => database.orbEnchantments[id])
    export const OrienteeringAid = createSelector(selectDatabase, (database): GetById.Static.OrienteeringAid => id => database.orienteeringAids[id])
    export const PactCategory = createSelector(selectDatabase, (database): GetById.Static.PactCategory => id => database.pactCategories[id])
    export const PactGift = createSelector(selectDatabase, (database): GetById.Static.PactGift => id => database.pactGifts[id])
    export const PatronCategory = createSelector(selectDatabase, (database): GetById.Static.PatronCategory => id => database.patronCategories[id])
    export const Patron = createSelector(selectDatabase, (database): GetById.Static.Patron => id => database.patrons[id])
    export const PersonalityTrait = createSelector(selectDatabase, (database): GetById.Static.PersonalityTrait => id => database.personalityTraits[id])
    export const Poison = createSelector(selectDatabase, (database): GetById.Static.Poison => id => database.poisons[id])
    export const Profession = createSelector(selectDatabase, (database): GetById.Static.Profession => id => database.professions[id])
    export const Property = createSelector(selectDatabase, (database): GetById.Static.Property => id => database.properties[id])
    export const ProtectiveWardingCircleSpecialAbility = createSelector(selectDatabase, (database): GetById.Static.ProtectiveWardingCircleSpecialAbility => id => database.protectiveWardingCircleSpecialAbilities[id])
    export const Publication = createSelector(selectDatabase, (database): GetById.Static.Publication => id => database.publications[id])
    export const Race = createSelector(selectDatabase, (database): GetById.Static.Race => id => database.races[id])
    export const RangedCombatTechnique = createSelector(selectDatabase, (database): GetById.Static.RangedCombatTechnique => id => database.rangedCombatTechniques[id])
    export const Reach = createSelector(selectDatabase, (database): GetById.Static.Reach => id => database.reaches[id])
    export const Region = createSelector(selectDatabase, (database): GetById.Static.Region => id => database.regions[id])
    export const RingEnchantment = createSelector(selectDatabase, (database): GetById.Static.RingEnchantment => id => database.ringEnchantments[id])
    export const Ritual = createSelector(selectDatabase, (database): GetById.Static.Ritual => id => database.rituals[id])
    export const RopeOrChain = createSelector(selectDatabase, (database): GetById.Static.RopeOrChain => id => database.ropesAndChains[id])
    export const Script = createSelector(selectDatabase, (database): GetById.Static.Script => id => database.scripts[id])
    export const Sermon = createSelector(selectDatabase, (database): GetById.Static.Sermon => id => database.sermons[id])
    export const Service = createSelector(selectDatabase, (database): GetById.Static.Service => id => database.services[id])
    export const SexPractice = createSelector(selectDatabase, (database): GetById.Static.SexPractice => id => database.sexPractices[id])
    export const SexSpecialAbility = createSelector(selectDatabase, (database): GetById.Static.SexSpecialAbility => id => database.sexSpecialAbilities[id])
    export const SickleRitual = createSelector(selectDatabase, (database): GetById.Static.SickleRitual => id => database.sickleRituals[id])
    export const SikaryanDrainSpecialAbility = createSelector(selectDatabase, (database): GetById.Static.SikaryanDrainSpecialAbility => id => database.sikaryanDrainSpecialAbilities[id])
    export const SkillGroup = createSelector(selectDatabase, (database): GetById.Static.SkillGroup => id => database.skillGroups[id])
    export const SkillModificationLevel = createSelector(selectDatabase, (database): GetById.Static.SkillModificationLevel => id => database.skillModificationLevels[id])
    export const Skill = createSelector(selectDatabase, (database): GetById.Static.Skill => id => database.skills[id])
    export const SkillStyleSpecialAbility = createSelector(selectDatabase, (database): GetById.Static.SkillStyleSpecialAbility => id => database.skillStyleSpecialAbilities[id])
    export const SocialStatus = createSelector(selectDatabase, (database): GetById.Static.SocialStatus => id => database.socialStatuses[id])
    export const Spell = createSelector(selectDatabase, (database): GetById.Static.Spell => id => database.spells[id])
    export const SpellSwordEnchantment = createSelector(selectDatabase, (database): GetById.Static.SpellSwordEnchantment => id => database.spellSwordEnchantments[id])
    export const StaffEnchantment = createSelector(selectDatabase, (database): GetById.Static.StaffEnchantment => id => database.staffEnchantments[id])
    export const State = createSelector(selectDatabase, (database): GetById.Static.State => id => database.states[id])
    export const Stationary = createSelector(selectDatabase, (database): GetById.Static.Stationary => id => database.stationary[id])
    export const Talisman = createSelector(selectDatabase, (database): GetById.Static.Talisman => id => database.talismans[id])
    export const TargetCategory = createSelector(selectDatabase, (database): GetById.Static.TargetCategory => id => database.targetCategories[id])
    export const ThievesTool = createSelector(selectDatabase, (database): GetById.Static.ThievesTool => id => database.thievesTools[id])
    export const ToolOfTheTrade = createSelector(selectDatabase, (database): GetById.Static.ToolOfTheTrade => id => database.toolsOfTheTrade[id])
    export const ToyEnchantment = createSelector(selectDatabase, (database): GetById.Static.ToyEnchantment => id => database.toyEnchantments[id])
    export const TradeSecret = createSelector(selectDatabase, (database): GetById.Static.TradeSecret => id => database.tradeSecrets[id])
    export const TravelGearOrTool = createSelector(selectDatabase, (database): GetById.Static.TravelGearOrTool => id => database.travelGearAndTools[id])
    export const Trinkhornzauber = createSelector(selectDatabase, (database): GetById.Static.Trinkhornzauber => id => database.trinkhornzauber[id])
    export const UI = createSelector(selectDatabase, (database): GetById.Static.UI => id => database.ui[id])
    export const VampiricGift = createSelector(selectDatabase, (database): GetById.Static.VampiricGift => id => database.vampiricGifts[id])
    export const Vehicle = createSelector(selectDatabase, (database): GetById.Static.Vehicle => id => database.vehicles[id])
    export const Vision = createSelector(selectDatabase, (database): GetById.Static.Vision => id => database.visions[id])
    export const WandEnchantment = createSelector(selectDatabase, (database): GetById.Static.WandEnchantment => id => database.wandEnchantments[id])
    export const WeaponAccessory = createSelector(selectDatabase, (database): GetById.Static.WeaponAccessory => id => database.weaponAccessories[id])
    export const WeaponEnchantment = createSelector(selectDatabase, (database): GetById.Static.WeaponEnchantment => id => database.weaponEnchantments[id])
    export const Weapon = createSelector(selectDatabase, (database): GetById.Static.Weapon => id => database.weapons[id])
    export const ZibiljaRitual = createSelector(selectDatabase, (database): GetById.Static.ZibiljaRitual => id => database.zibiljaRituals[id])
  }

  export namespace Dynamic {
    export const AdvancedCombatSpecialAbility = createSelector(selectDynamicAdvancedCombatSpecialAbilities, (dynamicAdvancedCombatSpecialAbilities): GetById.Dynamic.AdvancedCombatSpecialAbility => id => dynamicAdvancedCombatSpecialAbilities?.[id])
    export const AdvancedKarmaSpecialAbility = createSelector(selectDynamicAdvancedKarmaSpecialAbilities, (dynamicAdvancedKarmaSpecialAbilities): GetById.Dynamic.AdvancedKarmaSpecialAbility => id => dynamicAdvancedKarmaSpecialAbilities?.[id])
    export const AdvancedMagicalSpecialAbility = createSelector(selectDynamicAdvancedMagicalSpecialAbilities, (dynamicAdvancedMagicalSpecialAbilities): GetById.Dynamic.AdvancedMagicalSpecialAbility => id => dynamicAdvancedMagicalSpecialAbilities?.[id])
    export const AdvancedSkillSpecialAbility = createSelector(selectDynamicAdvancedSkillSpecialAbilities, (dynamicAdvancedSkillSpecialAbilities): GetById.Dynamic.AdvancedSkillSpecialAbility => id => dynamicAdvancedSkillSpecialAbilities?.[id])
    export const Advantage = createSelector(selectDynamicAdvantages, (dynamicAdvantages): GetById.Dynamic.Advantage => id => dynamicAdvantages?.[id])
    // export const Ammunition = createSelector(selectDynamicAmmunition, (dynamicAmmunition): GetById.Dynamic.Ammunition => id => dynamicAmmunition?.[id])
    export const AncestorGlyph = createSelector(selectDynamicAncestorGlyphs, (dynamicAncestorGlyphs): GetById.Dynamic.AncestorGlyph => id => dynamicAncestorGlyphs?.[id])
    // export const AnimalCare = createSelector(selectDynamicAnimalCare, (dynamicAnimalCare): GetById.Dynamic.AnimalCare => id => dynamicAnimalCare?.[id])
    export const AnimistPower = createSelector(selectDynamicAnimistPowers, (dynamicAnimistPowers): GetById.Dynamic.AnimistPower => id => dynamicAnimistPowers?.[id])
    export const ArcaneOrbEnchantment = createSelector(selectDynamicArcaneOrbEnchantments, (dynamicArcaneOrbEnchantments): GetById.Dynamic.ArcaneOrbEnchantment => id => dynamicArcaneOrbEnchantments?.[id])
    // export const Armor = createSelector(selectDynamicArmors, (dynamicArmors): GetById.Dynamic.Armor => id => dynamicArmors?.[id])
    export const AttireEnchantment = createSelector(selectDynamicAttireEnchantments, (dynamicAttireEnchantments): GetById.Dynamic.AttireEnchantment => id => dynamicAttireEnchantments?.[id])
    export const Attribute = createSelector(selectDynamicAttributes, (dynamicAttributes): GetById.Dynamic.Attribute => id => dynamicAttributes?.[id])
    // export const BandageOrRemedy = createSelector(selectDynamicBandagesAndRemedies, (dynamicBandagesAndRemedies): GetById.Dynamic.BandageOrRemedy => id => dynamicBandagesAndRemedies?.[id])
    export const BlessedTradition = createSelector(selectDynamicBlessedTraditions, (dynamicBlessedTraditions): GetById.Dynamic.BlessedTradition => id => dynamicBlessedTraditions?.[id])
    export const Blessing = createSelector(selectDynamicBlessings, (dynamicBlessings): GetById.Dynamic.Blessing => id => dynamicBlessings?.includes(id) ?? false)
    // export const Book = createSelector(selectDynamicBooks, (dynamicBooks): GetById.Dynamic.Book => id => dynamicBooks?.[id])
    export const BowlEnchantment = createSelector(selectDynamicBowlEnchantments, (dynamicBowlEnchantments): GetById.Dynamic.BowlEnchantment => id => dynamicBowlEnchantments?.[id])
    export const BrawlingSpecialAbility = createSelector(selectDynamicBrawlingSpecialAbilities, (dynamicBrawlingSpecialAbilities): GetById.Dynamic.BrawlingSpecialAbility => id => dynamicBrawlingSpecialAbilities?.[id])
    export const Cantrip = createSelector(selectDynamicCantrips, (dynamicCantrips): GetById.Dynamic.Cantrip => id => dynamicCantrips?.includes(id) ?? false)
    export const CauldronEnchantment = createSelector(selectDynamicCauldronEnchantments, (dynamicCauldronEnchantments): GetById.Dynamic.CauldronEnchantment => id => dynamicCauldronEnchantments?.[id])
    // export const CeremonialItem = createSelector(selectDynamicCeremonialItems, (dynamicCeremonialItems): GetById.Dynamic.CeremonialItem => id => dynamicCeremonialItems?.[id])
    export const CeremonialItemSpecialAbility = createSelector(selectDynamicCeremonialItemSpecialAbilities, (dynamicCeremonialItemSpecialAbilities): GetById.Dynamic.CeremonialItemSpecialAbility => id => dynamicCeremonialItemSpecialAbilities?.[id])
    export const Ceremony = createSelector(selectDynamicCeremonies, (dynamicCeremonies): GetById.Dynamic.Ceremony => id => dynamicCeremonies?.[id])
    export const ChronicleEnchantment = createSelector(selectDynamicChronicleEnchantments, (dynamicChronicleEnchantments): GetById.Dynamic.ChronicleEnchantment => id => dynamicChronicleEnchantments?.[id])
    export const CloseCombatTechnique = createSelector(selectDynamicCloseCombatTechniques, (dynamicCloseCombatTechniques): GetById.Dynamic.CloseCombatTechnique => id => dynamicCloseCombatTechniques?.[id])
    // export const Clothes = createSelector(selectDynamicClothes, (dynamicClothes): GetById.Dynamic.Clothes => id => dynamicClothes?.[id])
    export const CombatSpecialAbility = createSelector(selectDynamicCombatSpecialAbilities, (dynamicCombatSpecialAbilities): GetById.Dynamic.CombatSpecialAbility => id => dynamicCombatSpecialAbilities?.[id])
    export const CombatStyleSpecialAbility = createSelector(selectDynamicCombatStyleSpecialAbilities, (dynamicCombatStyleSpecialAbilities): GetById.Dynamic.CombatStyleSpecialAbility => id => dynamicCombatStyleSpecialAbilities?.[id])
    export const CommandSpecialAbility = createSelector(selectDynamicCommandSpecialAbilities, (dynamicCommandSpecialAbilities): GetById.Dynamic.CommandSpecialAbility => id => dynamicCommandSpecialAbilities?.[id])
    // export const Condition = createSelector(selectDynamicConditions, (dynamicConditions): GetById.Dynamic.Condition => id => dynamicConditions?.[id])
    // export const Container = createSelector(selectDynamicContainers, (dynamicContainers): GetById.Dynamic.Container => id => dynamicContainers?.[id])
    export const Curse = createSelector(selectDynamicCurses, (dynamicCurses): GetById.Dynamic.Curse => id => dynamicCurses?.[id])
    export const DaggerRitual = createSelector(selectDynamicDaggerRituals, (dynamicDaggerRituals): GetById.Dynamic.DaggerRitual => id => dynamicDaggerRituals?.[id])
    // export const DerivedCharacteristic = createSelector(selectDynamicDerivedCharacteristics, (dynamicDerivedCharacteristics): GetById.Dynamic.DerivedCharacteristic => id => dynamicDerivedCharacteristics?.[id])
    export const Disadvantage = createSelector(selectDynamicDisadvantages, (dynamicDisadvantages): GetById.Dynamic.Disadvantage => id => dynamicDisadvantages?.[id])
    // export const Disease = createSelector(selectDynamicDiseases, (dynamicDiseases): GetById.Dynamic.Disease => id => dynamicDiseases?.[id])
    export const DominationRitual = createSelector(selectDynamicDominationRituals, (dynamicDominationRituals): GetById.Dynamic.DominationRitual => id => dynamicDominationRituals?.[id])
    // export const Elixir = createSelector(selectDynamicElixirs, (dynamicElixirs): GetById.Dynamic.Elixir => id => dynamicElixirs?.[id])
    export const ElvenMagicalSong = createSelector(selectDynamicElvenMagicalSongs, (dynamicElvenMagicalSongs): GetById.Dynamic.ElvenMagicalSong => id => dynamicElvenMagicalSongs?.[id])
    // export const EquipmentOfBlessedOnes = createSelector(selectDynamicEquipmentOfBlessedOnes, (dynamicEquipmentOfBlessedOnes): GetById.Dynamic.EquipmentOfBlessedOnes => id => dynamicEquipmentOfBlessedOnes?.[id])
    export const FamiliarSpecialAbility = createSelector(selectDynamicFamiliarSpecialAbilities, (dynamicFamiliarSpecialAbilities): GetById.Dynamic.FamiliarSpecialAbility => id => dynamicFamiliarSpecialAbilities?.[id])
    // export const FamiliarsTrick = createSelector(selectDynamicFamiliarsTricks, (dynamicFamiliarsTricks): GetById.Dynamic.FamiliarsTrick => id => dynamicFamiliarsTricks?.[id])
    export const FatePointSexSpecialAbility = createSelector(selectDynamicFatePointSexSpecialAbilities, (dynamicFatePointSexSpecialAbilities): GetById.Dynamic.FatePointSexSpecialAbility => id => dynamicFatePointSexSpecialAbilities?.[id])
    export const FatePointSpecialAbility = createSelector(selectDynamicFatePointSpecialAbilities, (dynamicFatePointSpecialAbilities): GetById.Dynamic.FatePointSpecialAbility => id => dynamicFatePointSpecialAbilities?.[id])
    export const FocusRule = createSelector(selectDynamicFocusRules, (dynamicFocusRules): GetById.Dynamic.FocusRule => id => dynamicFocusRules?.[id])
    export const FoolsHatEnchantment = createSelector(selectDynamicFoolsHatEnchantments, (dynamicFoolsHatEnchantments): GetById.Dynamic.FoolsHatEnchantment => id => dynamicFoolsHatEnchantments?.[id])
    // export const GemOrPreciousStone = createSelector(selectDynamicGemsAndPreciousStones, (dynamicGemsAndPreciousStones): GetById.Dynamic.GemOrPreciousStone => id => dynamicGemsAndPreciousStones?.[id])
    export const GeneralSpecialAbility = createSelector(selectDynamicGeneralSpecialAbilities, (dynamicGeneralSpecialAbilities): GetById.Dynamic.GeneralSpecialAbility => id => dynamicGeneralSpecialAbilities?.[id])
    export const GeodeRitual = createSelector(selectDynamicGeodeRituals, (dynamicGeodeRituals): GetById.Dynamic.GeodeRitual => id => dynamicGeodeRituals?.[id])
    // export const IlluminationLightSource = createSelector(selectDynamicIlluminationLightSources, (dynamicIlluminationLightSources): GetById.Dynamic.IlluminationLightSource => id => dynamicIlluminationLightSources?.[id])
    // export const IlluminationRefillsOrSupplies = createSelector(selectDynamicIlluminationRefillsAndSupplies, (dynamicIlluminationRefillsAndSupplies): GetById.Dynamic.IlluminationRefillsOrSupplies => id => dynamicIlluminationRefillsAndSupplies?.[id])
    export const InstrumentEnchantment = createSelector(selectDynamicInstrumentEnchantments, (dynamicInstrumentEnchantments): GetById.Dynamic.InstrumentEnchantment => id => dynamicInstrumentEnchantments?.[id])
    export const JesterTrick = createSelector(selectDynamicJesterTricks, (dynamicJesterTricks): GetById.Dynamic.JesterTrick => id => dynamicJesterTricks?.[id])
    // export const Jewelry = createSelector(selectDynamicJewelry, (dynamicJewelry): GetById.Dynamic.Jewelry => id => dynamicJewelry?.[id])
    export const KarmaSpecialAbility = createSelector(selectDynamicKarmaSpecialAbilities, (dynamicKarmaSpecialAbilities): GetById.Dynamic.KarmaSpecialAbility => id => dynamicKarmaSpecialAbilities?.[id])
    export const Krallenkettenzauber = createSelector(selectDynamicKrallenkettenzauber, (dynamicKrallenkettenzauber): GetById.Dynamic.Krallenkettenzauber => id => dynamicKrallenkettenzauber?.[id])
    // export const Liebesspielzeug = createSelector(selectDynamicLiebesspielzeug, (dynamicLiebesspielzeug): GetById.Dynamic.Liebesspielzeug => id => dynamicLiebesspielzeug?.[id])
    export const LiturgicalChant = createSelector(selectDynamicLiturgicalChants, (dynamicLiturgicalChants): GetById.Dynamic.LiturgicalChant => id => dynamicLiturgicalChants?.[id])
    export const LiturgicalStyleSpecialAbility = createSelector(selectDynamicLiturgicalStyleSpecialAbilities, (dynamicLiturgicalStyleSpecialAbilities): GetById.Dynamic.LiturgicalStyleSpecialAbility => id => dynamicLiturgicalStyleSpecialAbilities?.[id])
    // export const LuxuryGood = createSelector(selectDynamicLuxuryGoods, (dynamicLuxuryGoods): GetById.Dynamic.LuxuryGood => id => dynamicLuxuryGoods?.[id])
    export const LycantropicGift = createSelector(selectDynamicLycantropicGifts, (dynamicLycantropicGifts): GetById.Dynamic.LycantropicGift => id => dynamicLycantropicGifts?.[id])
    // export const MagicalArtifact = createSelector(selectDynamicMagicalArtifacts, (dynamicMagicalArtifacts): GetById.Dynamic.MagicalArtifact => id => dynamicMagicalArtifacts?.[id])
    export const MagicalDance = createSelector(selectDynamicMagicalDances, (dynamicMagicalDances): GetById.Dynamic.MagicalDance => id => dynamicMagicalDances?.[id])
    export const MagicalMelody = createSelector(selectDynamicMagicalMelodies, (dynamicMagicalMelodies): GetById.Dynamic.MagicalMelody => id => dynamicMagicalMelodies?.[id])
    export const MagicalRune = createSelector(selectDynamicMagicalRunes, (dynamicMagicalRunes): GetById.Dynamic.MagicalRune => id => dynamicMagicalRunes?.[id])
    export const MagicalSign = createSelector(selectDynamicMagicalSigns, (dynamicMagicalSigns): GetById.Dynamic.MagicalSign => id => dynamicMagicalSigns?.[id])
    export const MagicalSpecialAbility = createSelector(selectDynamicMagicalSpecialAbilities, (dynamicMagicalSpecialAbilities): GetById.Dynamic.MagicalSpecialAbility => id => dynamicMagicalSpecialAbilities?.[id])
    export const MagicalTradition = createSelector(selectDynamicMagicalTraditions, (dynamicMagicalTraditions): GetById.Dynamic.MagicalTradition => id => dynamicMagicalTraditions?.[id])
    export const MagicStyleSpecialAbility = createSelector(selectDynamicMagicStyleSpecialAbilities, (dynamicMagicStyleSpecialAbilities): GetById.Dynamic.MagicStyleSpecialAbility => id => dynamicMagicStyleSpecialAbilities?.[id])
    // export const MetaCondition = createSelector(selectDynamicMetaConditions, (dynamicMetaConditions): GetById.Dynamic.MetaCondition => id => dynamicMetaConditions?.[id])
    // export const MusicalInstrument = createSelector(selectDynamicMusicalInstruments, (dynamicMusicalInstruments): GetById.Dynamic.MusicalInstrument => id => dynamicMusicalInstruments?.[id])
    export const OptionalRule = createSelector(selectDynamicOptionalRules, (dynamicOptionalRules): GetById.Dynamic.OptionalRule => id => dynamicOptionalRules?.[id])
    export const OrbEnchantment = createSelector(selectDynamicOrbEnchantments, (dynamicOrbEnchantments): GetById.Dynamic.OrbEnchantment => id => dynamicOrbEnchantments?.[id])
    // export const OrienteeringAid = createSelector(selectDynamicOrienteeringAids, (dynamicOrienteeringAids): GetById.Dynamic.OrienteeringAid => id => dynamicOrienteeringAids?.[id])
    export const PactGift = createSelector(selectDynamicPactGifts, (dynamicPactGifts): GetById.Dynamic.PactGift => id => dynamicPactGifts?.[id])
    // export const PersonalityTrait = createSelector(selectDynamicPersonalityTraits, (dynamicPersonalityTraits): GetById.Dynamic.PersonalityTrait => id => dynamicPersonalityTraits?.[id])
    // export const Poison = createSelector(selectDynamicPoisons, (dynamicPoisons): GetById.Dynamic.Poison => id => dynamicPoisons?.[id])
    export const ProtectiveWardingCircleSpecialAbility = createSelector(selectDynamicProtectiveWardingCircleSpecialAbilities, (dynamicProtectiveWardingCircleSpecialAbilities): GetById.Dynamic.ProtectiveWardingCircleSpecialAbility => id => dynamicProtectiveWardingCircleSpecialAbilities?.[id])
    // export const Publication = createSelector(selectDynamicPublications, (dynamicPublications): GetById.Dynamic.Publication => id => dynamicPublications?.[id])
    export const RangedCombatTechnique = createSelector(selectDynamicRangedCombatTechniques, (dynamicRangedCombatTechniques): GetById.Dynamic.RangedCombatTechnique => id => dynamicRangedCombatTechniques?.[id])
    export const RingEnchantment = createSelector(selectDynamicRingEnchantments, (dynamicRingEnchantments): GetById.Dynamic.RingEnchantment => id => dynamicRingEnchantments?.[id])
    export const Ritual = createSelector(selectDynamicRituals, (dynamicRituals): GetById.Dynamic.Ritual => id => dynamicRituals?.[id])
    // export const RopeOrChain = createSelector(selectDynamicRopesAndChains, (dynamicRopesAndChains): GetById.Dynamic.RopeOrChain => id => dynamicRopesAndChains?.[id])
    export const Sermon = createSelector(selectDynamicSermons, (dynamicSermons): GetById.Dynamic.Sermon => id => dynamicSermons?.[id])
    export const SexSpecialAbility = createSelector(selectDynamicSexSpecialAbilities, (dynamicSexSpecialAbilities): GetById.Dynamic.SexSpecialAbility => id => dynamicSexSpecialAbilities?.[id])
    export const SickleRitual = createSelector(selectDynamicSickleRituals, (dynamicSickleRituals): GetById.Dynamic.SickleRitual => id => dynamicSickleRituals?.[id])
    export const SikaryanDrainSpecialAbility = createSelector(selectDynamicSikaryanDrainSpecialAbilities, (dynamicSikaryanDrainSpecialAbilities): GetById.Dynamic.SikaryanDrainSpecialAbility => id => dynamicSikaryanDrainSpecialAbilities?.[id])
    export const Skill = createSelector(selectDynamicSkills, (dynamicSkills): GetById.Dynamic.Skill => id => dynamicSkills?.[id])
    export const SkillStyleSpecialAbility = createSelector(selectDynamicSkillStyleSpecialAbilities, (dynamicSkillStyleSpecialAbilities): GetById.Dynamic.SkillStyleSpecialAbility => id => dynamicSkillStyleSpecialAbilities?.[id])
    export const Spell = createSelector(selectDynamicSpells, (dynamicSpells): GetById.Dynamic.Spell => id => dynamicSpells?.[id])
    export const SpellSwordEnchantment = createSelector(selectDynamicSpellSwordEnchantments, (dynamicSpellSwordEnchantments): GetById.Dynamic.SpellSwordEnchantment => id => dynamicSpellSwordEnchantments?.[id])
    export const StaffEnchantment = createSelector(selectDynamicStaffEnchantments, (dynamicStaffEnchantments): GetById.Dynamic.StaffEnchantment => id => dynamicStaffEnchantments?.[id])
    export const State = createSelector(selectDynamicStates, (dynamicStates): GetById.Dynamic.State => id => dynamicStates?.[id])
    // export const Stationary = createSelector(selectDynamicStationary, (dynamicStationary): GetById.Dynamic.Stationary => id => dynamicStationary?.[id])
    // export const Talisman = createSelector(selectDynamicTalismans, (dynamicTalismans): GetById.Dynamic.Talisman => id => dynamicTalismans?.[id])
    // export const ThievesTool = createSelector(selectDynamicThievesTools, (dynamicThievesTools): GetById.Dynamic.ThievesTool => id => dynamicThievesTools?.[id])
    // export const ToolOfTheTrade = createSelector(selectDynamicToolsOfTheTrade, (dynamicToolsOfTheTrade): GetById.Dynamic.ToolOfTheTrade => id => dynamicToolsOfTheTrade?.[id])
    export const ToyEnchantment = createSelector(selectDynamicToyEnchantments, (dynamicToyEnchantments): GetById.Dynamic.ToyEnchantment => id => dynamicToyEnchantments?.[id])
    // export const TravelGearOrTool = createSelector(selectDynamicTravelGearAndTools, (dynamicTravelGearAndTools): GetById.Dynamic.TravelGearOrTool => id => dynamicTravelGearAndTools?.[id])
    export const Trinkhornzauber = createSelector(selectDynamicTrinkhornzauber, (dynamicTrinkhornzauber): GetById.Dynamic.Trinkhornzauber => id => dynamicTrinkhornzauber?.[id])
    export const VampiricGift = createSelector(selectDynamicVampiricGifts, (dynamicVampiricGifts): GetById.Dynamic.VampiricGift => id => dynamicVampiricGifts?.[id])
    // export const Vehicle = createSelector(selectDynamicVehicles, (dynamicVehicles): GetById.Dynamic.Vehicle => id => dynamicVehicles?.[id])
    export const Vision = createSelector(selectDynamicVisions, (dynamicVisions): GetById.Dynamic.Vision => id => dynamicVisions?.[id])
    export const WandEnchantment = createSelector(selectDynamicWandEnchantments, (dynamicWandEnchantments): GetById.Dynamic.WandEnchantment => id => dynamicWandEnchantments?.[id])
    // export const WeaponAccessory = createSelector(selectDynamicWeaponAccessories, (dynamicWeaponAccessories): GetById.Dynamic.WeaponAccessory => id => dynamicWeaponAccessories?.[id])
    export const WeaponEnchantment = createSelector(selectDynamicWeaponEnchantments, (dynamicWeaponEnchantments): GetById.Dynamic.WeaponEnchantment => id => dynamicWeaponEnchantments?.[id])
    // export const Weapon = createSelector(selectDynamicWeapons, (dynamicWeapons): GetById.Dynamic.Weapon => id => dynamicWeapons?.[id])
    export const ZibiljaRitual = createSelector(selectDynamicZibiljaRituals, (dynamicZibiljaRituals): GetById.Dynamic.ZibiljaRitual => id => dynamicZibiljaRituals?.[id])
  }
}

// prettier-ignore
export namespace SelectGetAll {
  export namespace Static {
    export const AdvancedCombatSpecialAbilities = createSelector(selectDatabase, (database): GetAll.Static.AdvancedCombatSpecialAbilities => constant(Object.values(database.advancedCombatSpecialAbilities)))
    export const AdvancedKarmaSpecialAbilities = createSelector(selectDatabase, (database): GetAll.Static.AdvancedKarmaSpecialAbilities => constant(Object.values(database.advancedKarmaSpecialAbilities)))
    export const AdvancedMagicalSpecialAbilities = createSelector(selectDatabase, (database): GetAll.Static.AdvancedMagicalSpecialAbilities => constant(Object.values(database.advancedMagicalSpecialAbilities)))
    export const AdvancedSkillSpecialAbilities = createSelector(selectDatabase, (database): GetAll.Static.AdvancedSkillSpecialAbilities => constant(Object.values(database.advancedSkillSpecialAbilities)))
    export const Advantages = createSelector(selectDatabase, (database): GetAll.Static.Advantages => constant(Object.values(database.advantages)))
    export const Ammunition = createSelector(selectDatabase, (database): GetAll.Static.Ammunition => constant(Object.values(database.ammunition)))
    export const AncestorGlyphs = createSelector(selectDatabase, (database): GetAll.Static.AncestorGlyphs => constant(Object.values(database.ancestorGlyphs)))
    export const AnimalCare = createSelector(selectDatabase, (database): GetAll.Static.AnimalCare => constant(Object.values(database.animalCare)))
    export const AnimalDiseases = createSelector(selectDatabase, (database): GetAll.Static.AnimalDiseases => constant(Object.values(database.animalDiseases)))
    export const Animals = createSelector(selectDatabase, (database): GetAll.Static.Animals => constant(Object.values(database.animals)))
    export const AnimalShapePaths = createSelector(selectDatabase, (database): GetAll.Static.AnimalShapePaths => constant(Object.values(database.animalShapePaths)))
    export const AnimalShapes = createSelector(selectDatabase, (database): GetAll.Static.AnimalShapes => constant(Object.values(database.animalShapes)))
    export const AnimalShapeSizes = createSelector(selectDatabase, (database): GetAll.Static.AnimalShapeSizes => constant(Object.values(database.animalShapeSizes)))
    export const AnimalTypes = createSelector(selectDatabase, (database): GetAll.Static.AnimalTypes => constant(Object.values(database.animalTypes)))
    export const AnimistPowers = createSelector(selectDatabase, (database): GetAll.Static.AnimistPowers => constant(Object.values(database.animistPowers)))
    export const AnimistPowerTribes = createSelector(selectDatabase, (database): GetAll.Static.AnimistPowerTribes => constant(Object.values(database.animistPowerTribes)))
    export const ArcaneBardTraditions = createSelector(selectDatabase, (database): GetAll.Static.ArcaneBardTraditions => constant(Object.values(database.arcaneBardTraditions)))
    export const ArcaneDancerTraditions = createSelector(selectDatabase, (database): GetAll.Static.ArcaneDancerTraditions => constant(Object.values(database.arcaneDancerTraditions)))
    export const ArcaneOrbEnchantments = createSelector(selectDatabase, (database): GetAll.Static.ArcaneOrbEnchantments => constant(Object.values(database.arcaneOrbEnchantments)))
    export const Armors = createSelector(selectDatabase, (database): GetAll.Static.Armors => constant(Object.values(database.armors)))
    export const ArmorTypes = createSelector(selectDatabase, (database): GetAll.Static.ArmorTypes => constant(Object.values(database.armorTypes)))
    export const Aspects = createSelector(selectDatabase, (database): GetAll.Static.Aspects => constant(Object.values(database.aspects)))
    export const AttireEnchantments = createSelector(selectDatabase, (database): GetAll.Static.AttireEnchantments => constant(Object.values(database.attireEnchantments)))
    export const Attributes = createSelector(selectDatabase, (database): GetAll.Static.Attributes => constant(Object.values(database.attributes)))
    export const BandagesAndRemedies = createSelector(selectDatabase, (database): GetAll.Static.BandagesAndRemedies => constant(Object.values(database.bandagesAndRemedies)))
    export const BlessedTraditions = createSelector(selectDatabase, (database): GetAll.Static.BlessedTraditions => constant(Object.values(database.blessedTraditions)))
    export const Blessings = createSelector(selectDatabase, (database): GetAll.Static.Blessings => constant(Object.values(database.blessings)))
    export const Books = createSelector(selectDatabase, (database): GetAll.Static.Books => constant(Object.values(database.books)))
    export const BowlEnchantments = createSelector(selectDatabase, (database): GetAll.Static.BowlEnchantments => constant(Object.values(database.bowlEnchantments)))
    export const BrawlingSpecialAbilities = createSelector(selectDatabase, (database): GetAll.Static.BrawlingSpecialAbilities => constant(Object.values(database.brawlingSpecialAbilities)))
    export const Brews = createSelector(selectDatabase, (database): GetAll.Static.Brews => constant(Object.values(database.brews)))
    export const Cantrips = createSelector(selectDatabase, (database): GetAll.Static.Cantrips => constant(Object.values(database.cantrips)))
    export const CauldronEnchantments = createSelector(selectDatabase, (database): GetAll.Static.CauldronEnchantments => constant(Object.values(database.cauldronEnchantments)))
    export const CeremonialItems = createSelector(selectDatabase, (database): GetAll.Static.CeremonialItems => constant(Object.values(database.ceremonialItems)))
    export const CeremonialItemSpecialAbilities = createSelector(selectDatabase, (database): GetAll.Static.CeremonialItemSpecialAbilities => constant(Object.values(database.ceremonialItemSpecialAbilities)))
    export const Ceremonies = createSelector(selectDatabase, (database): GetAll.Static.Ceremonies => constant(Object.values(database.ceremonies)))
    export const ChronicleEnchantments = createSelector(selectDatabase, (database): GetAll.Static.ChronicleEnchantments => constant(Object.values(database.chronicleEnchantments)))
    export const CloseCombatTechniques = createSelector(selectDatabase, (database): GetAll.Static.CloseCombatTechniques => constant(Object.values(database.closeCombatTechniques)))
    export const Clothes = createSelector(selectDatabase, (database): GetAll.Static.Clothes => constant(Object.values(database.clothes)))
    export const CombatSpecialAbilities = createSelector(selectDatabase, (database): GetAll.Static.CombatSpecialAbilities => constant(Object.values(database.combatSpecialAbilities)))
    export const CombatStyleSpecialAbilities = createSelector(selectDatabase, (database): GetAll.Static.CombatStyleSpecialAbilities => constant(Object.values(database.combatStyleSpecialAbilities)))
    export const CommandSpecialAbilities = createSelector(selectDatabase, (database): GetAll.Static.CommandSpecialAbilities => constant(Object.values(database.commandSpecialAbilities)))
    export const Conditions = createSelector(selectDatabase, (database): GetAll.Static.Conditions => constant(Object.values(database.conditions)))
    export const Containers = createSelector(selectDatabase, (database): GetAll.Static.Containers => constant(Object.values(database.containers)))
    export const Continents = createSelector(selectDatabase, (database): GetAll.Static.Continents => constant(Object.values(database.continents)))
    export const CoreRules = createSelector(selectDatabase, (database): GetAll.Static.CoreRules => constant(Object.values(database.coreRules)))
    export const Cultures = createSelector(selectDatabase, (database): GetAll.Static.Cultures => constant(Object.values(database.cultures)))
    export const Curses = createSelector(selectDatabase, (database): GetAll.Static.Curses => constant(Object.values(database.curses)))
    export const DaggerRituals = createSelector(selectDatabase, (database): GetAll.Static.DaggerRituals => constant(Object.values(database.daggerRituals)))
    export const DerivedCharacteristics = createSelector(selectDatabase, (database): GetAll.Static.DerivedCharacteristics => constant(Object.values(database.derivedCharacteristics)))
    export const Disadvantages = createSelector(selectDatabase, (database): GetAll.Static.Disadvantages => constant(Object.values(database.disadvantages)))
    export const Diseases = createSelector(selectDatabase, (database): GetAll.Static.Diseases => constant(Object.values(database.diseases)))
    export const DominationRituals = createSelector(selectDatabase, (database): GetAll.Static.DominationRituals => constant(Object.values(database.dominationRituals)))
    export const Elements = createSelector(selectDatabase, (database): GetAll.Static.Elements => constant(Object.values(database.elements)))
    export const Elixirs = createSelector(selectDatabase, (database): GetAll.Static.Elixirs => constant(Object.values(database.elixirs)))
    export const ElvenMagicalSongs = createSelector(selectDatabase, (database): GetAll.Static.ElvenMagicalSongs => constant(Object.values(database.elvenMagicalSongs)))
    export const EquipmentOfBlessedOnes = createSelector(selectDatabase, (database): GetAll.Static.EquipmentOfBlessedOnes => constant(Object.values(database.equipmentOfBlessedOnes)))
    export const EquipmentPackages = createSelector(selectDatabase, (database): GetAll.Static.EquipmentPackages => constant(Object.values(database.equipmentPackages)))
    export const ExperienceLevels = createSelector(selectDatabase, (database): GetAll.Static.ExperienceLevels => constant(Object.values(database.experienceLevels)))
    export const EyeColors = createSelector(selectDatabase, (database): GetAll.Static.EyeColors => constant(Object.values(database.eyeColors)))
    export const FamiliarSpecialAbilities = createSelector(selectDatabase, (database): GetAll.Static.FamiliarSpecialAbilities => constant(Object.values(database.familiarSpecialAbilities)))
    export const FamiliarsTricks = createSelector(selectDatabase, (database): GetAll.Static.FamiliarsTricks => constant(Object.values(database.familiarsTricks)))
    export const FatePointSexSpecialAbilities = createSelector(selectDatabase, (database): GetAll.Static.FatePointSexSpecialAbilities => constant(Object.values(database.fatePointSexSpecialAbilities)))
    export const FatePointSpecialAbilities = createSelector(selectDatabase, (database): GetAll.Static.FatePointSpecialAbilities => constant(Object.values(database.fatePointSpecialAbilities)))
    export const FocusRules = createSelector(selectDatabase, (database): GetAll.Static.FocusRules => constant(Object.values(database.focusRules)))
    export const FocusRuleSubjects = createSelector(selectDatabase, (database): GetAll.Static.FocusRuleSubjects => constant(Object.values(database.focusRuleSubjects)))
    export const FoolsHatEnchantments = createSelector(selectDatabase, (database): GetAll.Static.FoolsHatEnchantments => constant(Object.values(database.foolsHatEnchantments)))
    export const GemsAndPreciousStones = createSelector(selectDatabase, (database): GetAll.Static.GemsAndPreciousStones => constant(Object.values(database.gemsAndPreciousStones)))
    export const GeneralSpecialAbilities = createSelector(selectDatabase, (database): GetAll.Static.GeneralSpecialAbilities => constant(Object.values(database.generalSpecialAbilities)))
    export const GeodeRituals = createSelector(selectDatabase, (database): GetAll.Static.GeodeRituals => constant(Object.values(database.geodeRituals)))
    export const HairColors = createSelector(selectDatabase, (database): GetAll.Static.HairColors => constant(Object.values(database.hairColors)))
    export const IlluminationLightSources = createSelector(selectDatabase, (database): GetAll.Static.IlluminationLightSources => constant(Object.values(database.illuminationLightSources)))
    export const IlluminationRefillsAndSupplies = createSelector(selectDatabase, (database): GetAll.Static.IlluminationRefillsAndSupplies => constant(Object.values(database.illuminationRefillsAndSupplies)))
    export const InstrumentEnchantments = createSelector(selectDatabase, (database): GetAll.Static.InstrumentEnchantments => constant(Object.values(database.instrumentEnchantments)))
    export const JesterTricks = createSelector(selectDatabase, (database): GetAll.Static.JesterTricks => constant(Object.values(database.jesterTricks)))
    export const Jewelry = createSelector(selectDatabase, (database): GetAll.Static.Jewelry => constant(Object.values(database.jewelry)))
    export const KarmaSpecialAbilities = createSelector(selectDatabase, (database): GetAll.Static.KarmaSpecialAbilities => constant(Object.values(database.karmaSpecialAbilities)))
    export const Kirchenpraegungen = createSelector(selectDatabase, (database): GetAll.Static.Kirchenpraegungen => constant(Object.values(database.kirchenpraegungen)))
    export const Krallenkettenzauber = createSelector(selectDatabase, (database): GetAll.Static.Krallenkettenzauber => constant(Object.values(database.krallenkettenzauber)))
    export const Languages = createSelector(selectDatabase, (database): GetAll.Static.Languages => constant(Object.values(database.languages)))
    export const LessonsCurricula = createSelector(selectDatabase, (database): GetAll.Static.LessonsCurricula => constant(Object.values(database.lessonsCurricula)))
    export const LessonsGuidelines = createSelector(selectDatabase, (database): GetAll.Static.LessonsGuidelines => constant(Object.values(database.lessonsGuidelines)))
    export const Liebesspielzeug = createSelector(selectDatabase, (database): GetAll.Static.Liebesspielzeug => constant(Object.values(database.liebesspielzeug)))
    export const LiturgicalChants = createSelector(selectDatabase, (database): GetAll.Static.LiturgicalChants => constant(Object.values(database.liturgicalChants)))
    export const LiturgicalStyleSpecialAbilities = createSelector(selectDatabase, (database): GetAll.Static.LiturgicalStyleSpecialAbilities => constant(Object.values(database.liturgicalStyleSpecialAbilities)))
    export const Locales = createSelector(selectDatabase, (database): GetAll.Static.Locales => constant(Object.values(database.locales)))
    export const LuxuryGoods = createSelector(selectDatabase, (database): GetAll.Static.LuxuryGoods => constant(Object.values(database.luxuryGoods)))
    export const LycantropicGifts = createSelector(selectDatabase, (database): GetAll.Static.LycantropicGifts => constant(Object.values(database.lycantropicGifts)))
    export const MagicalArtifacts = createSelector(selectDatabase, (database): GetAll.Static.MagicalArtifacts => constant(Object.values(database.magicalArtifacts)))
    export const MagicalDances = createSelector(selectDatabase, (database): GetAll.Static.MagicalDances => constant(Object.values(database.magicalDances)))
    export const MagicalMelodies = createSelector(selectDatabase, (database): GetAll.Static.MagicalMelodies => constant(Object.values(database.magicalMelodies)))
    export const MagicalRunes = createSelector(selectDatabase, (database): GetAll.Static.MagicalRunes => constant(Object.values(database.magicalRunes)))
    export const MagicalSigns = createSelector(selectDatabase, (database): GetAll.Static.MagicalSigns => constant(Object.values(database.magicalSigns)))
    export const MagicalSpecialAbilities = createSelector(selectDatabase, (database): GetAll.Static.MagicalSpecialAbilities => constant(Object.values(database.magicalSpecialAbilities)))
    export const MagicalTraditions = createSelector(selectDatabase, (database): GetAll.Static.MagicalTraditions => constant(Object.values(database.magicalTraditions)))
    export const MagicStyleSpecialAbilities = createSelector(selectDatabase, (database): GetAll.Static.MagicStyleSpecialAbilities => constant(Object.values(database.magicStyleSpecialAbilities)))
    export const MetaConditions = createSelector(selectDatabase, (database): GetAll.Static.MetaConditions => constant(Object.values(database.metaConditions)))
    export const MusicalInstruments = createSelector(selectDatabase, (database): GetAll.Static.MusicalInstruments => constant(Object.values(database.musicalInstruments)))
    export const OptionalRules = createSelector(selectDatabase, (database): GetAll.Static.OptionalRules => constant(Object.values(database.optionalRules)))
    export const OrbEnchantments = createSelector(selectDatabase, (database): GetAll.Static.OrbEnchantments => constant(Object.values(database.orbEnchantments)))
    export const OrienteeringAids = createSelector(selectDatabase, (database): GetAll.Static.OrienteeringAids => constant(Object.values(database.orienteeringAids)))
    export const PactCategories = createSelector(selectDatabase, (database): GetAll.Static.PactCategories => constant(Object.values(database.pactCategories)))
    export const PactGifts = createSelector(selectDatabase, (database): GetAll.Static.PactGifts => constant(Object.values(database.pactGifts)))
    export const PatronCategories = createSelector(selectDatabase, (database): GetAll.Static.PatronCategories => constant(Object.values(database.patronCategories)))
    export const Patrons = createSelector(selectDatabase, (database): GetAll.Static.Patrons => constant(Object.values(database.patrons)))
    export const PersonalityTraits = createSelector(selectDatabase, (database): GetAll.Static.PersonalityTraits => constant(Object.values(database.personalityTraits)))
    export const Poisons = createSelector(selectDatabase, (database): GetAll.Static.Poisons => constant(Object.values(database.poisons)))
    export const Professions = createSelector(selectDatabase, (database): GetAll.Static.Professions => constant(Object.values(database.professions)))
    export const Properties = createSelector(selectDatabase, (database): GetAll.Static.Properties => constant(Object.values(database.properties)))
    export const ProtectiveWardingCircleSpecialAbilities = createSelector(selectDatabase, (database): GetAll.Static.ProtectiveWardingCircleSpecialAbilities => constant(Object.values(database.protectiveWardingCircleSpecialAbilities)))
    export const Publications = createSelector(selectDatabase, (database): GetAll.Static.Publications => constant(Object.values(database.publications)))
    export const Races = createSelector(selectDatabase, (database): GetAll.Static.Races => constant(Object.values(database.races)))
    export const RangedCombatTechniques = createSelector(selectDatabase, (database): GetAll.Static.RangedCombatTechniques => constant(Object.values(database.rangedCombatTechniques)))
    export const Reaches = createSelector(selectDatabase, (database): GetAll.Static.Reaches => constant(Object.values(database.reaches)))
    export const Regions = createSelector(selectDatabase, (database): GetAll.Static.Regions => constant(Object.values(database.regions)))
    export const RingEnchantments = createSelector(selectDatabase, (database): GetAll.Static.RingEnchantments => constant(Object.values(database.ringEnchantments)))
    export const Rituals = createSelector(selectDatabase, (database): GetAll.Static.Rituals => constant(Object.values(database.rituals)))
    export const RopesAndChains = createSelector(selectDatabase, (database): GetAll.Static.RopesAndChains => constant(Object.values(database.ropesAndChains)))
    export const Scripts = createSelector(selectDatabase, (database): GetAll.Static.Scripts => constant(Object.values(database.scripts)))
    export const Sermons = createSelector(selectDatabase, (database): GetAll.Static.Sermons => constant(Object.values(database.sermons)))
    export const Services = createSelector(selectDatabase, (database): GetAll.Static.Services => constant(Object.values(database.services)))
    export const SexPractices = createSelector(selectDatabase, (database): GetAll.Static.SexPractices => constant(Object.values(database.sexPractices)))
    export const SexSpecialAbilities = createSelector(selectDatabase, (database): GetAll.Static.SexSpecialAbilities => constant(Object.values(database.sexSpecialAbilities)))
    export const SickleRituals = createSelector(selectDatabase, (database): GetAll.Static.SickleRituals => constant(Object.values(database.sickleRituals)))
    export const SikaryanDrainSpecialAbilities = createSelector(selectDatabase, (database): GetAll.Static.SikaryanDrainSpecialAbilities => constant(Object.values(database.sikaryanDrainSpecialAbilities)))
    export const SkillGroups = createSelector(selectDatabase, (database): GetAll.Static.SkillGroups => constant(Object.values(database.skillGroups)))
    export const SkillModificationLevels = createSelector(selectDatabase, (database): GetAll.Static.SkillModificationLevels => constant(Object.values(database.skillModificationLevels)))
    export const Skills = createSelector(selectDatabase, (database): GetAll.Static.Skills => constant(Object.values(database.skills)))
    export const SkillStyleSpecialAbilities = createSelector(selectDatabase, (database): GetAll.Static.SkillStyleSpecialAbilities => constant(Object.values(database.skillStyleSpecialAbilities)))
    export const SocialStatuses = createSelector(selectDatabase, (database): GetAll.Static.SocialStatuses => constant(Object.values(database.socialStatuses)))
    export const Spells = createSelector(selectDatabase, (database): GetAll.Static.Spells => constant(Object.values(database.spells)))
    export const SpellSwordEnchantments = createSelector(selectDatabase, (database): GetAll.Static.SpellSwordEnchantments => constant(Object.values(database.spellSwordEnchantments)))
    export const StaffEnchantments = createSelector(selectDatabase, (database): GetAll.Static.StaffEnchantments => constant(Object.values(database.staffEnchantments)))
    export const States = createSelector(selectDatabase, (database): GetAll.Static.States => constant(Object.values(database.states)))
    export const Stationary = createSelector(selectDatabase, (database): GetAll.Static.Stationary => constant(Object.values(database.stationary)))
    export const Talismans = createSelector(selectDatabase, (database): GetAll.Static.Talismans => constant(Object.values(database.talismans)))
    export const TargetCategories = createSelector(selectDatabase, (database): GetAll.Static.TargetCategories => constant(Object.values(database.targetCategories)))
    export const ThievesTools = createSelector(selectDatabase, (database): GetAll.Static.ThievesTools => constant(Object.values(database.thievesTools)))
    export const ToolsOfTheTrade = createSelector(selectDatabase, (database): GetAll.Static.ToolsOfTheTrade => constant(Object.values(database.toolsOfTheTrade)))
    export const ToyEnchantments = createSelector(selectDatabase, (database): GetAll.Static.ToyEnchantments => constant(Object.values(database.toyEnchantments)))
    export const TradeSecrets = createSelector(selectDatabase, (database): GetAll.Static.TradeSecrets => constant(Object.values(database.tradeSecrets)))
    export const TravelGearAndTools = createSelector(selectDatabase, (database): GetAll.Static.TravelGearAndTools => constant(Object.values(database.travelGearAndTools)))
    export const Trinkhornzauber = createSelector(selectDatabase, (database): GetAll.Static.Trinkhornzauber => constant(Object.values(database.trinkhornzauber)))
    export const UI = createSelector(selectDatabase, (database): GetAll.Static.UI => constant(Object.values(database.ui)))
    export const VampiricGifts = createSelector(selectDatabase, (database): GetAll.Static.VampiricGifts => constant(Object.values(database.vampiricGifts)))
    export const Vehicles = createSelector(selectDatabase, (database): GetAll.Static.Vehicles => constant(Object.values(database.vehicles)))
    export const Visions = createSelector(selectDatabase, (database): GetAll.Static.Visions => constant(Object.values(database.visions)))
    export const WandEnchantments = createSelector(selectDatabase, (database): GetAll.Static.WandEnchantments => constant(Object.values(database.wandEnchantments)))
    export const WeaponAccessories = createSelector(selectDatabase, (database): GetAll.Static.WeaponAccessories => constant(Object.values(database.weaponAccessories)))
    export const WeaponEnchantments = createSelector(selectDatabase, (database): GetAll.Static.WeaponEnchantments => constant(Object.values(database.weaponEnchantments)))
    export const Weapons = createSelector(selectDatabase, (database): GetAll.Static.Weapons => constant(Object.values(database.weapons)))
    export const ZibiljaRituals = createSelector(selectDatabase, (database): GetAll.Static.ZibiljaRituals => constant(Object.values(database.zibiljaRituals)))
  }

  export namespace Dynamic {
    export const AdvancedCombatSpecialAbilities = createSelector(selectDynamicAdvancedCombatSpecialAbilities, (advancedCombatSpecialAbilities): GetAll.Dynamic.AdvancedCombatSpecialAbilities => constant(Object.values(advancedCombatSpecialAbilities ?? {})))
    export const AdvancedKarmaSpecialAbilities = createSelector(selectDynamicAdvancedKarmaSpecialAbilities, (advancedKarmaSpecialAbilities): GetAll.Dynamic.AdvancedKarmaSpecialAbilities => constant(Object.values(advancedKarmaSpecialAbilities ?? {})))
    export const AdvancedMagicalSpecialAbilities = createSelector(selectDynamicAdvancedMagicalSpecialAbilities, (advancedMagicalSpecialAbilities): GetAll.Dynamic.AdvancedMagicalSpecialAbilities => constant(Object.values(advancedMagicalSpecialAbilities ?? {})))
    export const AdvancedSkillSpecialAbilities = createSelector(selectDynamicAdvancedSkillSpecialAbilities, (advancedSkillSpecialAbilities): GetAll.Dynamic.AdvancedSkillSpecialAbilities => constant(Object.values(advancedSkillSpecialAbilities ?? {})))
    export const Advantages = createSelector(selectDynamicAdvantages, (advantages): GetAll.Dynamic.Advantages => constant(Object.values(advantages ?? {})))
    // export const Ammunition = createSelector(selectDynamicAmmunition, (ammunition): GetAll.Dynamic.Ammunition => constant(Object.values(ammunition ?? {})))
    export const AncestorGlyphs = createSelector(selectDynamicAncestorGlyphs, (ancestorGlyphs): GetAll.Dynamic.AncestorGlyphs => constant(Object.values(ancestorGlyphs ?? {})))
    // export const AnimalCare = createSelector(selectDynamicAnimalCare, (animalCare): GetAll.Dynamic.AnimalCare => constant(Object.values(animalCare ?? {})))
    export const AnimistPowers = createSelector(selectDynamicAnimistPowers, (animistPowers): GetAll.Dynamic.AnimistPowers => constant(Object.values(animistPowers ?? {})))
    export const ArcaneOrbEnchantments = createSelector(selectDynamicArcaneOrbEnchantments, (arcaneOrbEnchantments): GetAll.Dynamic.ArcaneOrbEnchantments => constant(Object.values(arcaneOrbEnchantments ?? {})))
    // export const Armor = createSelector(selectDynamicArmor, (armor): GetAll.Dynamic.Armor => constant(Object.values(armor ?? {})))
    export const AttireEnchantments = createSelector(selectDynamicAttireEnchantments, (attireEnchantments): GetAll.Dynamic.AttireEnchantments => constant(Object.values(attireEnchantments ?? {})))
    export const Attributes = createSelector(selectDynamicAttributes, (attributes): GetAll.Dynamic.Attributes => constant(Object.values(attributes ?? {})))
    // export const BandagesAndRemedies = createSelector(selectDynamicBandagesAndRemedies, (bandagesAndRemedies): GetAll.Dynamic.BandagesAndRemedies => constant(Object.values(bandagesAndRemedies ?? {})))
    export const BlessedTraditions = createSelector(selectDynamicBlessedTraditions, (blessedTraditions): GetAll.Dynamic.BlessedTraditions => constant(Object.values(blessedTraditions ?? {})))
    export const Blessings = createSelector(selectDynamicBlessings, (blessings): GetAll.Dynamic.Blessings => constant(Object.values(blessings ?? {})))
    // export const Books = createSelector(selectDynamicBooks, (books): GetAll.Dynamic.Books => constant(Object.values(books ?? {})))
    export const BowlEnchantments = createSelector(selectDynamicBowlEnchantments, (bowlEnchantments): GetAll.Dynamic.BowlEnchantments => constant(Object.values(bowlEnchantments ?? {})))
    export const BrawlingSpecialAbilities = createSelector(selectDynamicBrawlingSpecialAbilities, (brawlingSpecialAbilities): GetAll.Dynamic.BrawlingSpecialAbilities => constant(Object.values(brawlingSpecialAbilities ?? {})))
    export const Cantrips = createSelector(selectDynamicCantrips, (cantrips): GetAll.Dynamic.Cantrips => constant(Object.values(cantrips ?? {})))
    export const CauldronEnchantments = createSelector(selectDynamicCauldronEnchantments, (cauldronEnchantments): GetAll.Dynamic.CauldronEnchantments => constant(Object.values(cauldronEnchantments ?? {})))
    // export const CeremonialItems = createSelector(selectDynamicCeremonialItems, (ceremonialItems): GetAll.Dynamic.CeremonialItems => constant(Object.values(ceremonialItems ?? {})))
    export const CeremonialItemSpecialAbilities = createSelector(selectDynamicCeremonialItemSpecialAbilities, (ceremonialItemSpecialAbilities): GetAll.Dynamic.CeremonialItemSpecialAbilities => constant(Object.values(ceremonialItemSpecialAbilities ?? {})))
    export const Ceremonies = createSelector(selectDynamicCeremonies, (ceremonies): GetAll.Dynamic.Ceremonies => constant(Object.values(ceremonies ?? {})))
    export const ChronicleEnchantments = createSelector(selectDynamicChronicleEnchantments, (chronicleEnchantments): GetAll.Dynamic.ChronicleEnchantments => constant(Object.values(chronicleEnchantments ?? {})))
    export const CloseCombatTechniques = createSelector(selectDynamicCloseCombatTechniques, (closeCombatTechniques): GetAll.Dynamic.CloseCombatTechniques => constant(Object.values(closeCombatTechniques ?? {})))
    // export const Clothes = createSelector(selectDynamicClothes, (clothes): GetAll.Dynamic.Clothes => constant(Object.values(clothes ?? {})))
    export const CombatSpecialAbilities = createSelector(selectDynamicCombatSpecialAbilities, (combatSpecialAbilities): GetAll.Dynamic.CombatSpecialAbilities => constant(Object.values(combatSpecialAbilities ?? {})))
    export const CombatStyleSpecialAbilities = createSelector(selectDynamicCombatStyleSpecialAbilities, (combatStyleSpecialAbilities): GetAll.Dynamic.CombatStyleSpecialAbilities => constant(Object.values(combatStyleSpecialAbilities ?? {})))
    export const CommandSpecialAbilities = createSelector(selectDynamicCommandSpecialAbilities, (commandSpecialAbilities): GetAll.Dynamic.CommandSpecialAbilities => constant(Object.values(commandSpecialAbilities ?? {})))
    // export const Conditions = createSelector(selectDynamicConditions, (conditions): GetAll.Dynamic.Conditions => constant(Object.values(conditions ?? {})))
    // export const Containers = createSelector(selectDynamicContainers, (containers): GetAll.Dynamic.Containers => constant(Object.values(containers ?? {})))
    export const Curses = createSelector(selectDynamicCurses, (curses): GetAll.Dynamic.Curses => constant(Object.values(curses ?? {})))
    export const DaggerRituals = createSelector(selectDynamicDaggerRituals, (daggerRituals): GetAll.Dynamic.DaggerRituals => constant(Object.values(daggerRituals ?? {})))
    // export const DerivedCharacteristics = createSelector(selectDynamicDerivedCharacteristics, (derivedCharacteristics): GetAll.Dynamic.DerivedCharacteristics => constant(Object.values(derivedCharacteristics ?? {})))
    export const Disadvantages = createSelector(selectDynamicDisadvantages, (disadvantages): GetAll.Dynamic.Disadvantages => constant(Object.values(disadvantages ?? {})))
    // export const Diseases = createSelector(selectDynamicDiseases, (diseases): GetAll.Dynamic.Diseases => constant(Object.values(diseases ?? {})))
    export const DominationRituals = createSelector(selectDynamicDominationRituals, (dominationRituals): GetAll.Dynamic.DominationRituals => constant(Object.values(dominationRituals ?? {})))
    // export const Elixirs = createSelector(selectDynamicElixirs, (elixirs): GetAll.Dynamic.Elixirs => constant(Object.values(elixirs ?? {})))
    export const ElvenMagicalSongs = createSelector(selectDynamicElvenMagicalSongs, (elvenMagicalSongs): GetAll.Dynamic.ElvenMagicalSongs => constant(Object.values(elvenMagicalSongs ?? {})))
    // export const EquipmentOfBlessedOnes = createSelector(selectDynamicEquipmentOfBlessedOnes, (equipmentOfBlessedOnes): GetAll.Dynamic.EquipmentOfBlessedOnes => constant(Object.values(equipmentOfBlessedOnes ?? {})))
    export const FamiliarSpecialAbilities = createSelector(selectDynamicFamiliarSpecialAbilities, (familiarSpecialAbilities): GetAll.Dynamic.FamiliarSpecialAbilities => constant(Object.values(familiarSpecialAbilities ?? {})))
    // export const FamiliarsTricks = createSelector(selectDynamicFamiliarsTricks, (familiarsTricks): GetAll.Dynamic.FamiliarsTricks => constant(Object.values(familiarsTricks ?? {})))
    export const FatePointSexSpecialAbilities = createSelector(selectDynamicFatePointSexSpecialAbilities, (fatePointSexSpecialAbilities): GetAll.Dynamic.FatePointSexSpecialAbilities => constant(Object.values(fatePointSexSpecialAbilities ?? {})))
    export const FatePointSpecialAbilities = createSelector(selectDynamicFatePointSpecialAbilities, (fatePointSpecialAbilities): GetAll.Dynamic.FatePointSpecialAbilities => constant(Object.values(fatePointSpecialAbilities ?? {})))
    export const FocusRules = createSelector(selectDynamicFocusRules, (focusRules): GetAll.Dynamic.FocusRules => constant(Object.values(focusRules ?? {})))
    export const FoolsHatEnchantments = createSelector(selectDynamicFoolsHatEnchantments, (foolsHatEnchantments): GetAll.Dynamic.FoolsHatEnchantments => constant(Object.values(foolsHatEnchantments ?? {})))
    // export const GemsAndPreciousStones = createSelector(selectDynamicGemsAndPreciousStones, (gemsAndPreciousStones): GetAll.Dynamic.GemsAndPreciousStones => constant(Object.values(gemsAndPreciousStones ?? {})))
    export const GeneralSpecialAbilities = createSelector(selectDynamicGeneralSpecialAbilities, (generalSpecialAbilities): GetAll.Dynamic.GeneralSpecialAbilities => constant(Object.values(generalSpecialAbilities ?? {})))
    export const GeodeRituals = createSelector(selectDynamicGeodeRituals, (geodeRituals): GetAll.Dynamic.GeodeRituals => constant(Object.values(geodeRituals ?? {})))
    // export const IlluminationLightSources = createSelector(selectDynamicIlluminationLightSources, (illuminationLightSources): GetAll.Dynamic.IlluminationLightSources => constant(Object.values(illuminationLightSources ?? {})))
    // export const IlluminationRefillsAndSupplies = createSelector(selectDynamicIlluminationRefillsAndSupplies, (illuminationRefillsAndSupplies): GetAll.Dynamic.IlluminationRefillsAndSupplies => constant(Object.values(illuminationRefillsAndSupplies ?? {})))
    export const InstrumentEnchantments = createSelector(selectDynamicInstrumentEnchantments, (instrumentEnchantments): GetAll.Dynamic.InstrumentEnchantments => constant(Object.values(instrumentEnchantments ?? {})))
    export const JesterTricks = createSelector(selectDynamicJesterTricks, (jesterTricks): GetAll.Dynamic.JesterTricks => constant(Object.values(jesterTricks ?? {})))
    // export const Jewelry = createSelector(selectDynamicJewelry, (jewelry): GetAll.Dynamic.Jewelry => constant(Object.values(jewelry ?? {})))
    export const KarmaSpecialAbilities = createSelector(selectDynamicKarmaSpecialAbilities, (karmaSpecialAbilities): GetAll.Dynamic.KarmaSpecialAbilities => constant(Object.values(karmaSpecialAbilities ?? {})))
    export const Krallenkettenzauber = createSelector(selectDynamicKrallenkettenzauber, (krallenkettenzauber): GetAll.Dynamic.Krallenkettenzauber => constant(Object.values(krallenkettenzauber ?? {})))
    // export const Liebesspielzeuge = createSelector(selectDynamicLiebesspielzeuge, (liebesspielzeuge): GetAll.Dynamic.Liebesspielzeuge => constant(Object.values(liebesspielzeuge ?? {})))
    export const LiturgicalChants = createSelector(selectDynamicLiturgicalChants, (liturgicalChants): GetAll.Dynamic.LiturgicalChants => constant(Object.values(liturgicalChants ?? {})))
    export const LiturgicalStyleSpecialAbilities = createSelector(selectDynamicLiturgicalStyleSpecialAbilities, (liturgicalStyleSpecialAbilities): GetAll.Dynamic.LiturgicalStyleSpecialAbilities => constant(Object.values(liturgicalStyleSpecialAbilities ?? {})))
    // export const LuxuryGoods = createSelector(selectDynamicLuxuryGoods, (luxuryGoods): GetAll.Dynamic.LuxuryGoods => constant(Object.values(luxuryGoods ?? {})))
    export const LycantropicGifts = createSelector(selectDynamicLycantropicGifts, (lycantropicGifts): GetAll.Dynamic.LycantropicGifts => constant(Object.values(lycantropicGifts ?? {})))
    // export const MagicalArtifacts = createSelector(selectDynamicMagicalArtifacts, (magicalArtifacts): GetAll.Dynamic.MagicalArtifacts => constant(Object.values(magicalArtifacts ?? {})))
    export const MagicalDances = createSelector(selectDynamicMagicalDances, (magicalDances): GetAll.Dynamic.MagicalDances => constant(Object.values(magicalDances ?? {})))
    export const MagicalMelodies = createSelector(selectDynamicMagicalMelodies, (magicalMelodies): GetAll.Dynamic.MagicalMelodies => constant(Object.values(magicalMelodies ?? {})))
    export const MagicalRunes = createSelector(selectDynamicMagicalRunes, (magicalRunes): GetAll.Dynamic.MagicalRunes => constant(Object.values(magicalRunes ?? {})))
    export const MagicalSigns = createSelector(selectDynamicMagicalSigns, (magicalSigns): GetAll.Dynamic.MagicalSigns => constant(Object.values(magicalSigns ?? {})))
    export const MagicalSpecialAbilities = createSelector(selectDynamicMagicalSpecialAbilities, (magicalSpecialAbilities): GetAll.Dynamic.MagicalSpecialAbilities => constant(Object.values(magicalSpecialAbilities ?? {})))
    export const MagicalTraditions = createSelector(selectDynamicMagicalTraditions, (magicalTraditions): GetAll.Dynamic.MagicalTraditions => constant(Object.values(magicalTraditions ?? {})))
    export const MagicStyleSpecialAbilities = createSelector(selectDynamicMagicStyleSpecialAbilities, (magicStyleSpecialAbilities): GetAll.Dynamic.MagicStyleSpecialAbilities => constant(Object.values(magicStyleSpecialAbilities ?? {})))
    // export const MetaConditions = createSelector(selectDynamicMetaConditions, (metaConditions): GetAll.Dynamic.MetaConditions => constant(Object.values(metaConditions ?? {})))
    // export const MusicalInstruments = createSelector(selectDynamicMusicalInstruments, (musicalInstruments): GetAll.Dynamic.MusicalInstruments => constant(Object.values(musicalInstruments ?? {})))
    export const OptionalRules = createSelector(selectDynamicOptionalRules, (optionalRules): GetAll.Dynamic.OptionalRules => constant(Object.values(optionalRules ?? {})))
    export const OrbEnchantments = createSelector(selectDynamicOrbEnchantments, (orbEnchantments): GetAll.Dynamic.OrbEnchantments => constant(Object.values(orbEnchantments ?? {})))
    // export const OrienteeringAids = createSelector(selectDynamicOrienteeringAids, (orienteeringAids): GetAll.Dynamic.OrienteeringAids => constant(Object.values(orienteeringAids ?? {})))
    export const PactGifts = createSelector(selectDynamicPactGifts, (pactGifts): GetAll.Dynamic.PactGifts => constant(Object.values(pactGifts ?? {})))
    // export const PersonalityTraits = createSelector(selectDynamicPersonalityTraits, (personalityTraits): GetAll.Dynamic.PersonalityTraits => constant(Object.values(personalityTraits ?? {})))
    // export const Poisons = createSelector(selectDynamicPoisons, (poisons): GetAll.Dynamic.Poisons => constant(Object.values(poisons ?? {})))
    export const ProtectiveWardingCircleSpecialAbilities = createSelector(selectDynamicProtectiveWardingCircleSpecialAbilities, (protectiveWardingCircleSpecialAbilities): GetAll.Dynamic.ProtectiveWardingCircleSpecialAbilities => constant(Object.values(protectiveWardingCircleSpecialAbilities ?? {})))
    // export const Publications = createSelector(selectDynamicPublications, (publications): GetAll.Dynamic.Publications => constant(Object.values(publications ?? {})))
    export const RangedCombatTechniques = createSelector(selectDynamicRangedCombatTechniques, (rangedCombatTechniques): GetAll.Dynamic.RangedCombatTechniques => constant(Object.values(rangedCombatTechniques ?? {})))
    export const RingEnchantments = createSelector(selectDynamicRingEnchantments, (ringEnchantments): GetAll.Dynamic.RingEnchantments => constant(Object.values(ringEnchantments ?? {})))
    export const Rituals = createSelector(selectDynamicRituals, (rituals): GetAll.Dynamic.Rituals => constant(Object.values(rituals ?? {})))
    // export const RopesAndChains = createSelector(selectDynamicRopesAndChains, (ropesAndChains): GetAll.Dynamic.RopesAndChains => constant(Object.values(ropesAndChains ?? {})))
    export const Sermons = createSelector(selectDynamicSermons, (sermons): GetAll.Dynamic.Sermons => constant(Object.values(sermons ?? {})))
    export const SexSpecialAbilities = createSelector(selectDynamicSexSpecialAbilities, (sexSpecialAbilities): GetAll.Dynamic.SexSpecialAbilities => constant(Object.values(sexSpecialAbilities ?? {})))
    export const SickleRituals = createSelector(selectDynamicSickleRituals, (sickleRituals): GetAll.Dynamic.SickleRituals => constant(Object.values(sickleRituals ?? {})))
    export const SikaryanDrainSpecialAbilities = createSelector(selectDynamicSikaryanDrainSpecialAbilities, (sikaryanDrainSpecialAbilities): GetAll.Dynamic.SikaryanDrainSpecialAbilities => constant(Object.values(sikaryanDrainSpecialAbilities ?? {})))
    export const Skills = createSelector(selectDynamicSkills, (skills): GetAll.Dynamic.Skills => constant(Object.values(skills ?? {})))
    export const SkillStyleSpecialAbilities = createSelector(selectDynamicSkillStyleSpecialAbilities, (skillStyleSpecialAbilities): GetAll.Dynamic.SkillStyleSpecialAbilities => constant(Object.values(skillStyleSpecialAbilities ?? {})))
    export const Spells = createSelector(selectDynamicSpells, (spells): GetAll.Dynamic.Spells => constant(Object.values(spells ?? {})))
    export const SpellSwordEnchantments = createSelector(selectDynamicSpellSwordEnchantments, (spellSwordEnchantments): GetAll.Dynamic.SpellSwordEnchantments => constant(Object.values(spellSwordEnchantments ?? {})))
    export const StaffEnchantments = createSelector(selectDynamicStaffEnchantments, (staffEnchantments): GetAll.Dynamic.StaffEnchantments => constant(Object.values(staffEnchantments ?? {})))
    export const States = createSelector(selectDynamicStates, (states): GetAll.Dynamic.States => constant(Object.values(states ?? {})))
    // export const Stationary = createSelector(selectDynamicStationary, (stationary): GetAll.Dynamic.Stationary => constant(Object.values(stationary ?? {})))
    // export const Talismans = createSelector(selectDynamicTalismans, (talismans): GetAll.Dynamic.Talismans => constant(Object.values(talismans ?? {})))
    // export const ThievesTools = createSelector(selectDynamicThievesTools, (thievesTools): GetAll.Dynamic.ThievesTools => constant(Object.values(thievesTools ?? {})))
    // export const ToolsOfTheTrade = createSelector(selectDynamicToolsOfTheTrade, (toolsOfTheTrade): GetAll.Dynamic.ToolsOfTheTrade => constant(Object.values(toolsOfTheTrade ?? {})))
    export const ToyEnchantments = createSelector(selectDynamicToyEnchantments, (toyEnchantments): GetAll.Dynamic.ToyEnchantments => constant(Object.values(toyEnchantments ?? {})))
    // export const TravelGearAndTools = createSelector(selectDynamicTravelGearAndTools, (travelGearAndTools): GetAll.Dynamic.TravelGearAndTools => constant(Object.values(travelGearAndTools ?? {})))
    export const Trinkhornzauber = createSelector(selectDynamicTrinkhornzauber, (trinkhornzauber): GetAll.Dynamic.Trinkhornzauber => constant(Object.values(trinkhornzauber ?? {})))
    export const VampiricGifts = createSelector(selectDynamicVampiricGifts, (vampiricGifts): GetAll.Dynamic.VampiricGifts => constant(Object.values(vampiricGifts ?? {})))
    // export const Vehicle s=createSelector(selectDynamicVehicle, (vehicle): GetAll.Dynamic.Vehicle => constant(Object.values(vehicle ?? {})))
    export const Visions = createSelector(selectDynamicVisions, (visions): GetAll.Dynamic.Visions => constant(Object.values(visions ?? {})))
    export const WandEnchantments = createSelector(selectDynamicWandEnchantments, (wandEnchantments): GetAll.Dynamic.WandEnchantments => constant(Object.values(wandEnchantments ?? {})))
    // export const WeaponAccessories = createSelector(selectDynamicWeaponAccessories, (weaponAccessories): GetAll.Dynamic.WeaponAccessories => constant(Object.values(weaponAccessories ?? {})))
    export const WeaponEnchantments = createSelector(selectDynamicWeaponEnchantments, (weaponEnchantments): GetAll.Dynamic.WeaponEnchantments => constant(Object.values(weaponEnchantments ?? {})))
    // export const Weapons = createSelector(selectDynamicWeapons, (weapons): GetAll.Dynamic.Weapons => constant(Object.values(weapons ?? {})))
    export const ZibiljaRituals = createSelector(selectDynamicZibiljaRituals, (zibiljaRituals): GetAll.Dynamic.ZibiljaRituals => constant(Object.values(zibiljaRituals ?? {})))
  }
}
