// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var Ley_List$OptolithClient = require("../Data/Ley_List.bs.js");
var Ley_Option$OptolithClient = require("../Data/Ley_Option.bs.js");
var Activatable_Accessors$OptolithClient = require("./Activatable_Accessors.bs.js");

function getLevel(maybeEntry) {
  return Curry._1(Ley_Option$OptolithClient.sum, Curry._2(Ley_Option$OptolithClient.Infix.$great$great$eq, Curry._2(Ley_Option$OptolithClient.Infix.$great$great$eq, maybeEntry, (function (entry) {
                        return Ley_Option$OptolithClient.listToOption(entry.active);
                      })), (function (active) {
                    return active.level;
                  })));
}

function modifyByLevel(value, inc, dec) {
  return (value + getLevel(inc) | 0) - getLevel(dec) | 0;
}

function modifyByLevelM(value, inc, dec) {
  return Ley_Option$OptolithClient.option(0, (function (value) {
                return modifyByLevel(value, inc, dec);
              }), value);
}

function getModifierByIsActive(value, inc, dec) {
  return Ley_Option$OptolithClient.option(0, (function (value) {
                if (Activatable_Accessors$OptolithClient.isActiveM(inc)) {
                  return value + 1 | 0;
                } else if (Activatable_Accessors$OptolithClient.isActiveM(dec)) {
                  return value - 1 | 0;
                } else {
                  return value;
                }
              }), value);
}

function getModifierByIsActives(value, incs, decs) {
  return Ley_Option$OptolithClient.option(0, (function (value) {
                return (value + Ley_List$OptolithClient.countBy(Activatable_Accessors$OptolithClient.isActiveM, incs) | 0) - Ley_List$OptolithClient.countBy(Activatable_Accessors$OptolithClient.isActiveM, decs) | 0;
              }), value);
}

exports.modifyByLevel = modifyByLevel;
exports.modifyByLevelM = modifyByLevelM;
exports.getModifierByIsActive = getModifierByIsActive;
exports.getModifierByIsActives = getModifierByIsActives;
/* Ley_List-OptolithClient Not a pure module */
