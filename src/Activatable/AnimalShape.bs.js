// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var Json_decode = require("@glennsl/bs-json/src/Json_decode.bs.js");
var Decoder$OptolithClient = require("../Utilities/Decoder.bs.js");
var Ley_Option$OptolithClient = require("../Data/Ley_Option.bs.js");
var TranslationMap$OptolithClient = require("../Misc/TranslationMap.bs.js");

function t(json) {
  return {
          name: Json_decode.field("name", Json_decode.string, json)
        };
}

var Translation = {
  t: t
};

var TranslationMap = TranslationMap$OptolithClient.Make(Translation);

function multilingual(json) {
  return {
          id: Json_decode.field("id", Json_decode.$$int, json),
          path: Json_decode.field("path", Json_decode.$$int, json),
          size: Json_decode.field("size", Json_decode.$$int, json),
          translations: Json_decode.field("translations", TranslationMap.Decode.t, json)
        };
}

function resolveTranslations(langs, x) {
  return Curry._2(Ley_Option$OptolithClient.Infix.$less$amp$great, Curry._2(TranslationMap.Decode.getFromLanguageOrder, langs, x.translations), (function (translation) {
                return {
                        id: x.id,
                        name: translation.name,
                        path: x.path,
                        size: x.size
                      };
              }));
}

function t$1(langs, json) {
  return resolveTranslations(langs, multilingual(json));
}

function toAssoc(x) {
  return [
          x.id,
          x
        ];
}

function assoc(param, param$1) {
  return Decoder$OptolithClient.decodeAssoc(t$1, toAssoc, param, param$1);
}

var Decode = {
  Translation: Translation,
  TranslationMap: TranslationMap,
  multilingual: multilingual,
  resolveTranslations: resolveTranslations,
  t: t$1,
  toAssoc: toAssoc,
  assoc: assoc
};

function t$2(param, json) {
  return {
          id: Json_decode.field("id", Json_decode.$$int, json),
          volume: Json_decode.field("volume", Json_decode.$$int, json),
          apValue: Json_decode.field("apValue", Json_decode.$$int, json)
        };
}

function toAssoc$1(x) {
  return [
          x.id,
          x
        ];
}

function assoc$1(param, param$1) {
  return Decoder$OptolithClient.decodeAssoc(t$2, toAssoc$1, param, param$1);
}

var Decode$1 = {
  t: t$2,
  toAssoc: toAssoc$1,
  assoc: assoc$1
};

var Size = {
  Decode: Decode$1
};

exports.Decode = Decode;
exports.Size = Size;
/* TranslationMap Not a pure module */
