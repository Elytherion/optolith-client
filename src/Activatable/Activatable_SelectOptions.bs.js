// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "bs-platform/lib/es6/curry.js";
import * as Ley_List$OptolithClient from "../Data/Ley_List.bs.js";
import * as Ley_IntMap$OptolithClient from "../Data/Ley_IntMap.bs.js";
import * as Ley_Option$OptolithClient from "../Data/Ley_Option.bs.js";
import * as Ley_Function$OptolithClient from "../Data/Ley_Function.bs.js";
import * as SelectOption$OptolithClient from "./SelectOption.bs.js";
import * as Activatable_Convert$OptolithClient from "./Activatable_Convert.bs.js";
import * as Activatable_Accessors$OptolithClient from "./Activatable_Accessors.bs.js";

function getSelectOption(x, id) {
  var partial_arg = Activatable_Accessors$OptolithClient.selectOptions(x);
  return Curry._2(Ley_Option$OptolithClient.Infix.$great$great$eq, Activatable_Convert$OptolithClient.activatableOptionToSelectOptionId(id), (function (param) {
                return Ley_Function$OptolithClient.flip(SelectOption$OptolithClient.$$Map.lookup, partial_arg, param);
              }));
}

function getSelectOptionName(x, id) {
  return Curry._2(Ley_Option$OptolithClient.Infix.$less$amp$great, getSelectOption(x, id), (function (y) {
                return y.name;
              }));
}

function getSelectOptionCost(x, id) {
  return Curry._2(Ley_Option$OptolithClient.Infix.$great$great$eq, getSelectOption(x, id), (function (y) {
                return y.apValue;
              }));
}

function getActiveOptions1(x) {
  return Ley_Option$OptolithClient.mapOption((function (y) {
                return Ley_Option$OptolithClient.listToOption(y.options);
              }), x.active);
}

function mapActiveOptions1(f, x) {
  return Ley_Option$OptolithClient.mapOption((function (y) {
                return Curry._2(Ley_Option$OptolithClient.Infix.$great$great$eq, Ley_Option$OptolithClient.listToOption(y.options), f);
              }), x.active);
}

function getActiveSelectOptions1(param) {
  return mapActiveOptions1(Activatable_Convert$OptolithClient.activatableOptionToSelectOptionId, param);
}

function getActiveOptions2(param) {
  var index = 1;
  return Ley_Option$OptolithClient.mapOption((function (y) {
                return Ley_List$OptolithClient.Safe.atMay(y.options, index);
              }), param.active);
}

function getActiveOptions2Map(x) {
  return Curry._3(Ley_List$OptolithClient.foldr, (function (current, mp) {
                return Ley_Option$OptolithClient.fromOption(mp, Curry._3(Ley_Option$OptolithClient.liftM2, (function (secondOption, option) {
                                  return Curry._3(SelectOption$OptolithClient.$$Map.alter, (function (maybeSecondOptions) {
                                                return Ley_List$OptolithClient.cons(secondOption, Ley_Option$OptolithClient.fromOption(/* [] */0, maybeSecondOptions));
                                              }), option, mp);
                                }), Ley_Function$OptolithClient.flip(Ley_List$OptolithClient.Safe.atMay, 1, current.options), Curry._2(Ley_Option$OptolithClient.Infix.$great$great$eq, Ley_Option$OptolithClient.listToOption(current.options), Activatable_Convert$OptolithClient.activatableOptionToSelectOptionId)));
              }), SelectOption$OptolithClient.$$Map.empty, x.active);
}

function getOption(index, heroEntry) {
  return Ley_List$OptolithClient.Safe.atMay(heroEntry.options, index);
}

function getOption1(heroEntry) {
  return Ley_Option$OptolithClient.listToOption(heroEntry.options);
}

function getOption2(param) {
  return getOption(1, param);
}

function getOption3(param) {
  return getOption(2, param);
}

function getCustomInput(option) {
  if (option.TAG) {
    return option._0;
  }
  
}

function getGenericId(option) {
  if (option.TAG) {
    return ;
  }
  var x = option._0;
  if (x.TAG) {
    return ;
  } else {
    return x._0;
  }
}

function lookupMap(k, mp, f) {
  return Curry._2(Ley_Option$OptolithClient.Infix.$less$$great, f, Curry._2(Ley_IntMap$OptolithClient.lookup, k, mp));
}

function getSkillFromOption(staticData, option) {
  if (option.TAG) {
    return ;
  }
  var id = option._0;
  if (id.TAG === /* Skill */1) {
    return Curry._2(Ley_IntMap$OptolithClient.lookup, id._0, staticData.skills);
  }
  
}

export {
  getSelectOption ,
  getSelectOptionName ,
  getSelectOptionCost ,
  getActiveOptions1 ,
  mapActiveOptions1 ,
  getActiveSelectOptions1 ,
  getActiveOptions2 ,
  getActiveOptions2Map ,
  getOption ,
  getOption1 ,
  getOption2 ,
  getOption3 ,
  getCustomInput ,
  getGenericId ,
  lookupMap ,
  getSkillFromOption ,
  
}
/* Ley_List-OptolithClient Not a pure module */
