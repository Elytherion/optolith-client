// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "bs-platform/lib/es6/curry.js";
import * as Ley_List$OptolithClient from "../Data/Ley_List.bs.js";
import * as Ley_IntMap$OptolithClient from "../Data/Ley_IntMap.bs.js";
import * as Ley_Option$OptolithClient from "../Data/Ley_Option.bs.js";
import * as Activatable_Accessors$OptolithClient from "../Activatable/Activatable_Accessors.bs.js";

function isTraditionId(staticData, id) {
  return Curry._2(Ley_IntMap$OptolithClient.member, id, staticData.magicalTraditions);
}

function isActiveTradition(staticData, x) {
  if (Curry._2(Ley_IntMap$OptolithClient.member, x.id, staticData.magicalTraditions)) {
    return Activatable_Accessors$OptolithClient.isActive(x);
  } else {
    return false;
  }
}

function getHeroEntries(staticData, mp) {
  return Ley_List$OptolithClient.filter((function (param) {
                return isActiveTradition(staticData, param);
              }), Curry._1(Ley_IntMap$OptolithClient.elems, mp));
}

function getStaticEntries(staticData, mp) {
  return Ley_Option$OptolithClient.mapOption((function (trad) {
                if (isActiveTradition(staticData, trad)) {
                  return Curry._2(Ley_IntMap$OptolithClient.lookup, trad.id, staticData.specialAbilities);
                }
                
              }), Curry._1(Ley_IntMap$OptolithClient.elems, mp));
}

function getEntries(staticData, mp) {
  return Ley_Option$OptolithClient.mapOption((function (trad) {
                if (isActiveTradition(staticData, trad)) {
                  return Curry._3(Ley_Option$OptolithClient.liftM2, (function (staticEntry, traditionEntry) {
                                return [
                                        staticEntry,
                                        trad,
                                        traditionEntry
                                      ];
                              }), Curry._2(Ley_IntMap$OptolithClient.lookup, trad.id, staticData.specialAbilities), Curry._2(Ley_IntMap$OptolithClient.lookup, trad.id, staticData.magicalTraditions));
                }
                
              }), Curry._1(Ley_IntMap$OptolithClient.elems, mp));
}

function idToNumId(staticData, id) {
  return Curry._2(Ley_Option$OptolithClient.Infix.$great$great$eq, Curry._2(Ley_IntMap$OptolithClient.lookup, id, staticData.magicalTraditions), (function (x) {
                return x.numId;
              }));
}

function numIdToId(staticData, id) {
  return Curry._2(Ley_Option$OptolithClient.Infix.$less$amp$great, Curry._2(Ley_IntMap$OptolithClient.find, (function (trad) {
                    return trad.numId === id;
                  }), staticData.magicalTraditions), (function (x) {
                return x.id;
              }));
}

function getPrimaryAttributeId(staticData, mp) {
  return Curry._2(Ley_Option$OptolithClient.Infix.$great$great$eq, Ley_List$OptolithClient.Extra.firstJust((function (trad) {
                    if (isActiveTradition(staticData, trad)) {
                      return Curry._2(Ley_IntMap$OptolithClient.lookup, trad.id, staticData.magicalTraditions);
                    }
                    
                  }), Curry._1(Ley_IntMap$OptolithClient.elems, mp)), (function (trad) {
                return trad.primary;
              }));
}

function isTraditionId$1(staticData, id) {
  return Curry._2(Ley_IntMap$OptolithClient.member, id, staticData.blessedTraditions);
}

function isActiveTradition$1(staticData, x) {
  if (Curry._2(Ley_IntMap$OptolithClient.member, x.id, staticData.blessedTraditions)) {
    return Activatable_Accessors$OptolithClient.isActive(x);
  } else {
    return false;
  }
}

function getHeroEntry(staticData, mp) {
  return Curry._2(Ley_IntMap$OptolithClient.find, (function (param) {
                return isActiveTradition$1(staticData, param);
              }), mp);
}

function getStaticEntry(staticData, mp) {
  return Curry._2(Ley_Option$OptolithClient.Infix.$great$great$eq, Curry._2(Ley_IntMap$OptolithClient.find, (function (param) {
                    return isActiveTradition$1(staticData, param);
                  }), mp), (function (trad) {
                return Curry._2(Ley_IntMap$OptolithClient.lookup, trad.id, staticData.specialAbilities);
              }));
}

function getEntry(staticData, mp) {
  return Curry._2(Ley_Option$OptolithClient.Infix.$great$great$eq, Curry._2(Ley_IntMap$OptolithClient.find, (function (param) {
                    return isActiveTradition$1(staticData, param);
                  }), mp), (function (trad) {
                return Curry._3(Ley_Option$OptolithClient.liftM2, (function (staticEntry, traditionEntry) {
                              return [
                                      staticEntry,
                                      trad,
                                      traditionEntry
                                    ];
                            }), Curry._2(Ley_IntMap$OptolithClient.lookup, trad.id, staticData.specialAbilities), Curry._2(Ley_IntMap$OptolithClient.lookup, trad.id, staticData.blessedTraditions));
              }));
}

function idToNumId$1(staticData, id) {
  return Curry._2(Ley_Option$OptolithClient.Infix.$less$amp$great, Curry._2(Ley_IntMap$OptolithClient.lookup, id, staticData.blessedTraditions), (function (x) {
                return x.numId;
              }));
}

function numIdToId$1(staticData, id) {
  return Curry._2(Ley_Option$OptolithClient.Infix.$less$amp$great, Curry._2(Ley_IntMap$OptolithClient.find, (function (trad) {
                    return trad.numId === id;
                  }), staticData.blessedTraditions), (function (x) {
                return x.id;
              }));
}

function getPrimaryAttributeId$1(staticData, mp) {
  return Curry._2(Ley_Option$OptolithClient.Infix.$great$great$eq, Curry._2(Ley_Option$OptolithClient.Infix.$great$great$eq, Curry._2(Ley_IntMap$OptolithClient.find, (function (param) {
                        return isActiveTradition$1(staticData, param);
                      }), mp), (function (trad) {
                    return Curry._2(Ley_IntMap$OptolithClient.lookup, trad.id, staticData.magicalTraditions);
                  })), (function (trad) {
                return trad.primary;
              }));
}

var Magical = {
  isTraditionId: isTraditionId,
  getHeroEntries: getHeroEntries,
  getStaticEntries: getStaticEntries,
  getEntries: getEntries,
  idToNumId: idToNumId,
  numIdToId: numIdToId,
  getPrimaryAttributeId: getPrimaryAttributeId
};

var Blessed = {
  isTraditionId: isTraditionId$1,
  getHeroEntry: getHeroEntry,
  getStaticEntry: getStaticEntry,
  getEntry: getEntry,
  idToNumId: idToNumId$1,
  numIdToId: numIdToId$1,
  getPrimaryAttributeId: getPrimaryAttributeId$1
};

export {
  Magical ,
  Blessed ,
  
}
/* Ley_List-OptolithClient Not a pure module */
