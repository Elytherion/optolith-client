// Generated by ReScript, PLEASE EDIT WITH CARE

import * as List from "bs-platform/lib/es6/list.js";
import * as Curry from "bs-platform/lib/es6/curry.js";
import * as Json_decode from "@glennsl/bs-json/src/Json_decode.bs.js";
import * as Ley_IntMap$OptolithClient from "../Data/Ley_IntMap.bs.js";
import * as Ley_IntSet$OptolithClient from "../Data/Ley_IntSet.bs.js";

function uniquePairs(xs) {
  return List.fold_right((function (param, mp) {
                var k = param[0];
                if (Curry._2(Ley_IntMap$OptolithClient.member, k, mp)) {
                  throw {
                        RE_EXN_ID: Json_decode.DecodeError,
                        _1: "toMapIntegrity: Key " + (k.toString() + "is set twice"),
                        Error: new Error()
                      };
                }
                return Curry._3(Ley_IntMap$OptolithClient.insert, k, param[1], mp);
              }), xs, Ley_IntMap$OptolithClient.empty);
}

function uniqueList(xs) {
  return List.fold_right((function (x, s) {
                if (Curry._2(Ley_IntSet$OptolithClient.member, x, s)) {
                  throw {
                        RE_EXN_ID: Json_decode.DecodeError,
                        _1: "toMapIntegrity: Key " + (x.toString() + "is set twice"),
                        Error: new Error()
                      };
                }
                return Curry._2(Ley_IntSet$OptolithClient.insert, x, s);
              }), xs, Ley_IntSet$OptolithClient.empty);
}

var Entity = {
  uniquePairs: uniquePairs,
  uniqueList: uniqueList
};

export {
  Entity ,
  
}
/* Ley_IntMap-OptolithClient Not a pure module */
