// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Url from "url";
import * as Path from "path";
import * as Curry from "bs-platform/lib/es6/curry.js";
import * as Semver from "semver";
import * as Electron from "electron";
import * as Caml_option from "bs-platform/lib/es6/caml_option.js";
import * as IO$OptolithClient from "./Data/IO.bs.js";
import * as Ipc$OptolithClient from "./Init/Ipc.bs.js";
import * as Init$OptolithClient from "./Init/Init.bs.js";
import ElectronWindowState from "electron-window-state";
import * as Electron$OptolithClient from "./ExternalBindings/Electron.bs.js";
import * as Ley_Option$OptolithClient from "./Data/Ley_Option.bs.js";
import * as AutoUpdates$OptolithClient from "./Init/AutoUpdates.bs.js";
import * as ElectronDevtoolsInstaller from "electron-devtools-installer";
import ElectronDevtoolsInstaller$1 from "electron-devtools-installer";

Electron.app.setAppUserModelId("lukasobermann.optolith");

function setDerivedUserDataPath(param) {
  console.log("main: Set user data path ...");
  var isPrerelease = Ley_Option$OptolithClient.isNone(Caml_option.null_to_opt(Semver.prerelease(Electron.app.getVersion())));
  console.log(isPrerelease);
  var userDataPath = Path.join(Electron.app.getPath("appData"), isPrerelease ? "Optolith Insider" : "Optolith");
  console.log(userDataPath);
  return Curry._2(IO$OptolithClient.Infix.$less$amp$great, Curry._2(IO$OptolithClient.Infix.$great$great$eq, IO$OptolithClient.existsFile(userDataPath), (function (exists) {
                    if (exists) {
                      return Curry._1(IO$OptolithClient.$$return, undefined);
                    } else {
                      return IO$OptolithClient.mkdir(userDataPath);
                    }
                  })), (function (param) {
                Electron.app.setPath("userData", userDataPath);
                
              }));
}

function installDevelopmentExtensions(param) {
  console.log("main: Install extensions ...");
  return Curry._2(IO$OptolithClient.Infix.$less$amp$great, ElectronDevtoolsInstaller$1([
                  ElectronDevtoolsInstaller.REACT_DEVELOPER_TOOLS,
                  ElectronDevtoolsInstaller.REDUX_DEVTOOLS
                ]), (function (installedExtensions) {
                console.log("main: Installed extensions: " + installedExtensions);
                
              }));
}

function createWindow(param) {
  console.log("main: Create Window ...");
  console.log("main (window): Initialize window state keeper");
  var mainWindowState = ElectronWindowState({
        defaultHeight: 720,
        defaultWidth: 1280,
        file: "window.json"
      });
  console.log("main (window): Initialize browser window");
  var mainWindow = new Electron.BrowserWindow({
        width: mainWindowState.width,
        height: mainWindowState.height,
        x: mainWindowState.x,
        y: mainWindowState.y,
        minWidth: 1280,
        minHeight: 720,
        center: true,
        resizable: true,
        title: "Optolith",
        icon: Path.join(Electron.app.getAppPath(), "src", "icon.png"),
        show: false,
        frame: false,
        acceptFirstMouse: true,
        backgroundColor: "#111111",
        webPreferences: {
          nodeIntegration: true,
          enableRemoteModule: true
        }
      });
  console.log("main (window): Manage browser window with state keeper");
  mainWindowState.manage(mainWindow);
  console.log("main (window): Load url");
  return Curry._2(IO$OptolithClient.Infix.$less$amp$great, mainWindow.loadURL(Url.format({
                      pathname: Path.join(__dirname, "index.html"),
                      protocol: "file:",
                      slashes: true
                    })), (function (param) {
                mainWindow.webContents.openDevTools();
                console.log("main (window): Show window");
                mainWindow.show();
                if (mainWindowState.isMaximized) {
                  console.log("main (window): Maximize window ...");
                  mainWindow.maximize();
                }
                return mainWindow;
              }));
}

function initializeData(mainWindow) {
  console.time("parseStaticData");
  return Curry._2(IO$OptolithClient.Infix.$less$amp$great, Init$OptolithClient.getInitialData((function (supportedLanguages, localeOrder, config, uiMessages) {
                    return Ipc$OptolithClient.FromMain.send(mainWindow, {
                                TAG: /* InitMinimal */0,
                                _0: supportedLanguages,
                                _1: localeOrder,
                                _2: config,
                                _3: uiMessages
                              });
                  }), Path.join(__dirname, "initWorker.js"), (function (progress) {
                    return Ipc$OptolithClient.FromMain.send(mainWindow, {
                                TAG: /* InitProgress */1,
                                _0: progress
                              });
                  })), (function (staticData) {
                console.timeEnd("parseStaticData");
                return Ipc$OptolithClient.FromMain.send(mainWindow, {
                            TAG: /* InitDone */2,
                            _0: staticData
                          });
              }));
}

function main(param) {
  Curry._2(IO$OptolithClient.Infix.$great$great$eq, Curry._2(IO$OptolithClient.Infix.$great$great$eq, Curry._2(IO$OptolithClient.Infix.$great$great$eq, setDerivedUserDataPath(undefined), installDevelopmentExtensions), createWindow), (function (mainWindow) {
            return Curry._2(IO$OptolithClient.Infix.$less$amp$great, initializeData(mainWindow), (function (param) {
                          AutoUpdates$OptolithClient.listenAndRun(mainWindow);
                          return Curry._1(Electron$OptolithClient.App.on, {
                                      NAME: "windowAllClosed",
                                      VAL: (function (param) {
                                          Electron.app.quit();
                                          
                                        })
                                    });
                        }));
          })).catch(function (err) {
        console.error(err);
        return Curry._1(IO$OptolithClient.$$return, undefined);
      });
  
}

Curry._1(Electron$OptolithClient.App.on, {
      NAME: "ready",
      VAL: main
    });

export {
  setDerivedUserDataPath ,
  installDevelopmentExtensions ,
  createWindow ,
  initializeData ,
  main ,
  
}
/*  Not a pure module */
